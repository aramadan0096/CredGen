// Generated by jextract

package com.loadingbyte.credgen.natives.decklinkcapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*scheduledFrameCompletionCallback_t)(void* frame,int result);
 * }
 */
public interface scheduledFrameCompletionCallback_t {

    void apply(java.lang.foreign.MemorySegment frame, int result);
    static MemorySegment allocate(scheduledFrameCompletionCallback_t fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$0.const$4, fi, constants$0.const$3, scope);
    }
    static scheduledFrameCompletionCallback_t ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _frame, int _result) -> {
            try {
                constants$0.const$5.invokeExact(symbol, _frame, _result);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


