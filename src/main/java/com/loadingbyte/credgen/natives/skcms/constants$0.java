// Generated by jextract

package com.loadingbyte.credgen.natives.skcms;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$0 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$0() {}
    static final StructLayout const$0 = MemoryLayout.structLayout(
        JAVA_LONG.withName("__clang_max_align_nonce1"),
        MemoryLayout.paddingLayout(8),
        MemoryLayout.paddingLayout(16).withName("__clang_max_align_nonce2")
    ).withName("");
    static final VarHandle const$1 = constants$0.const$0.varHandle(MemoryLayout.PathElement.groupElement("__clang_max_align_nonce1"));
    static final StructLayout const$2 = MemoryLayout.structLayout(
        MemoryLayout.sequenceLayout(2, JAVA_INT).withName("__val")
    ).withName("");
    static final FunctionDescriptor const$3 = FunctionDescriptor.of(RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        JAVA_LONG
    );
    static final MethodHandle const$4 = RuntimeHelper.downcallHandle(
        "memcpy",
        constants$0.const$3
    );
    static final MethodHandle const$5 = RuntimeHelper.downcallHandle(
        "memmove",
        constants$0.const$3
    );
    static final FunctionDescriptor const$6 = FunctionDescriptor.of(RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        JAVA_INT,
        JAVA_LONG
    );
    static final MethodHandle const$7 = RuntimeHelper.downcallHandle(
        "memccpy",
        constants$0.const$6
    );
    static final FunctionDescriptor const$8 = FunctionDescriptor.of(RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        JAVA_INT,
        JAVA_LONG
    );
    static final MethodHandle const$9 = RuntimeHelper.downcallHandle(
        "memset",
        constants$0.const$8
    );
    static final FunctionDescriptor const$10 = FunctionDescriptor.of(JAVA_INT,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        JAVA_LONG
    );
    static final MethodHandle const$11 = RuntimeHelper.downcallHandle(
        "memcmp",
        constants$0.const$10
    );
    static final MethodHandle const$12 = RuntimeHelper.downcallHandle(
        "__memcmpeq",
        constants$0.const$10
    );
    static final MethodHandle const$13 = RuntimeHelper.downcallHandle(
        "memchr",
        constants$0.const$8
    );
    static final FunctionDescriptor const$14 = FunctionDescriptor.of(RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$15 = RuntimeHelper.downcallHandle(
        "strcpy",
        constants$0.const$14
    );
    static final MethodHandle const$16 = RuntimeHelper.downcallHandle(
        "strncpy",
        constants$0.const$3
    );
    static final MethodHandle const$17 = RuntimeHelper.downcallHandle(
        "strcat",
        constants$0.const$14
    );
    static final MethodHandle const$18 = RuntimeHelper.downcallHandle(
        "strncat",
        constants$0.const$3
    );
    static final FunctionDescriptor const$19 = FunctionDescriptor.of(JAVA_INT,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$20 = RuntimeHelper.downcallHandle(
        "strcmp",
        constants$0.const$19
    );
    static final MethodHandle const$21 = RuntimeHelper.downcallHandle(
        "strncmp",
        constants$0.const$10
    );
    static final MethodHandle const$22 = RuntimeHelper.downcallHandle(
        "strcoll",
        constants$0.const$19
    );
    static final FunctionDescriptor const$23 = FunctionDescriptor.of(JAVA_LONG,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        JAVA_LONG
    );
    static final MethodHandle const$24 = RuntimeHelper.downcallHandle(
        "strxfrm",
        constants$0.const$23
    );
    static final StructLayout const$25 = MemoryLayout.structLayout(
        MemoryLayout.sequenceLayout(13, RuntimeHelper.POINTER).withName("__locales"),
        RuntimeHelper.POINTER.withName("__ctype_b"),
        RuntimeHelper.POINTER.withName("__ctype_tolower"),
        RuntimeHelper.POINTER.withName("__ctype_toupper"),
        MemoryLayout.sequenceLayout(13, RuntimeHelper.POINTER).withName("__names")
    ).withName("__locale_struct");
    static final VarHandle const$26 = constants$0.const$25.varHandle(MemoryLayout.PathElement.groupElement("__ctype_b"));
    static final VarHandle const$27 = constants$0.const$25.varHandle(MemoryLayout.PathElement.groupElement("__ctype_tolower"));
    static final VarHandle const$28 = constants$0.const$25.varHandle(MemoryLayout.PathElement.groupElement("__ctype_toupper"));
    static final FunctionDescriptor const$29 = FunctionDescriptor.of(JAVA_INT,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$30 = RuntimeHelper.downcallHandle(
        "strcoll_l",
        constants$0.const$29
    );
    static final FunctionDescriptor const$31 = FunctionDescriptor.of(JAVA_LONG,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        JAVA_LONG,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$32 = RuntimeHelper.downcallHandle(
        "strxfrm_l",
        constants$0.const$31
    );
    static final FunctionDescriptor const$33 = FunctionDescriptor.of(RuntimeHelper.POINTER,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$34 = RuntimeHelper.downcallHandle(
        "strdup",
        constants$0.const$33
    );
    static final FunctionDescriptor const$35 = FunctionDescriptor.of(RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        JAVA_LONG
    );
    static final MethodHandle const$36 = RuntimeHelper.downcallHandle(
        "strndup",
        constants$0.const$35
    );
    static final FunctionDescriptor const$37 = FunctionDescriptor.of(RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        JAVA_INT
    );
    static final MethodHandle const$38 = RuntimeHelper.downcallHandle(
        "strchr",
        constants$0.const$37
    );
    static final MethodHandle const$39 = RuntimeHelper.downcallHandle(
        "strrchr",
        constants$0.const$37
    );
    static final MethodHandle const$40 = RuntimeHelper.downcallHandle(
        "strchrnul",
        constants$0.const$37
    );
    static final FunctionDescriptor const$41 = FunctionDescriptor.of(JAVA_LONG,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$42 = RuntimeHelper.downcallHandle(
        "strcspn",
        constants$0.const$41
    );
    static final MethodHandle const$43 = RuntimeHelper.downcallHandle(
        "strspn",
        constants$0.const$41
    );
    static final MethodHandle const$44 = RuntimeHelper.downcallHandle(
        "strpbrk",
        constants$0.const$14
    );
    static final MethodHandle const$45 = RuntimeHelper.downcallHandle(
        "strstr",
        constants$0.const$14
    );
    static final MethodHandle const$46 = RuntimeHelper.downcallHandle(
        "strtok",
        constants$0.const$14
    );
    static final FunctionDescriptor const$47 = FunctionDescriptor.of(RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$48 = RuntimeHelper.downcallHandle(
        "__strtok_r",
        constants$0.const$47
    );
    static final MethodHandle const$49 = RuntimeHelper.downcallHandle(
        "strtok_r",
        constants$0.const$47
    );
    static final MethodHandle const$50 = RuntimeHelper.downcallHandle(
        "strcasestr",
        constants$0.const$14
    );
    static final FunctionDescriptor const$51 = FunctionDescriptor.of(RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        JAVA_LONG,
        RuntimeHelper.POINTER,
        JAVA_LONG
    );
    static final MethodHandle const$52 = RuntimeHelper.downcallHandle(
        "memmem",
        constants$0.const$51
    );
    static final MethodHandle const$53 = RuntimeHelper.downcallHandle(
        "__mempcpy",
        constants$0.const$3
    );
    static final MethodHandle const$54 = RuntimeHelper.downcallHandle(
        "mempcpy",
        constants$0.const$3
    );
    static final FunctionDescriptor const$55 = FunctionDescriptor.of(JAVA_LONG,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$56 = RuntimeHelper.downcallHandle(
        "strlen",
        constants$0.const$55
    );
    static final FunctionDescriptor const$57 = FunctionDescriptor.of(JAVA_LONG,
        RuntimeHelper.POINTER,
        JAVA_LONG
    );
    static final MethodHandle const$58 = RuntimeHelper.downcallHandle(
        "strnlen",
        constants$0.const$57
    );
    static final FunctionDescriptor const$59 = FunctionDescriptor.of(RuntimeHelper.POINTER,
        JAVA_INT
    );
    static final MethodHandle const$60 = RuntimeHelper.downcallHandle(
        "strerror",
        constants$0.const$59
    );
    static final FunctionDescriptor const$61 = FunctionDescriptor.of(JAVA_INT,
        JAVA_INT,
        RuntimeHelper.POINTER,
        JAVA_LONG
    );
    static final MethodHandle const$62 = RuntimeHelper.downcallHandle(
        "strerror_r",
        constants$0.const$61
    );
    static final FunctionDescriptor const$63 = FunctionDescriptor.of(RuntimeHelper.POINTER,
        JAVA_INT,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$64 = RuntimeHelper.downcallHandle(
        "strerror_l",
        constants$0.const$63
    );
    static final MethodHandle const$65 = RuntimeHelper.downcallHandle(
        "bcmp",
        constants$0.const$10
    );
    static final FunctionDescriptor const$66 = FunctionDescriptor.ofVoid(
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        JAVA_LONG
    );
    static final MethodHandle const$67 = RuntimeHelper.downcallHandle(
        "bcopy",
        constants$0.const$66
    );
    static final FunctionDescriptor const$68 = FunctionDescriptor.ofVoid(
        RuntimeHelper.POINTER,
        JAVA_LONG
    );
    static final MethodHandle const$69 = RuntimeHelper.downcallHandle(
        "bzero",
        constants$0.const$68
    );
    static final MethodHandle const$70 = RuntimeHelper.downcallHandle(
        "index",
        constants$0.const$37
    );
    static final MethodHandle const$71 = RuntimeHelper.downcallHandle(
        "rindex",
        constants$0.const$37
    );
    static final FunctionDescriptor const$72 = FunctionDescriptor.of(JAVA_INT,
        JAVA_INT
    );
    static final MethodHandle const$73 = RuntimeHelper.downcallHandle(
        "ffs",
        constants$0.const$72
    );
    static final FunctionDescriptor const$74 = FunctionDescriptor.of(JAVA_INT,
        JAVA_LONG
    );
    static final MethodHandle const$75 = RuntimeHelper.downcallHandle(
        "ffsl",
        constants$0.const$74
    );
    static final MethodHandle const$76 = RuntimeHelper.downcallHandle(
        "ffsll",
        constants$0.const$74
    );
    static final MethodHandle const$77 = RuntimeHelper.downcallHandle(
        "strcasecmp",
        constants$0.const$19
    );
    static final MethodHandle const$78 = RuntimeHelper.downcallHandle(
        "strncasecmp",
        constants$0.const$10
    );
    static final MethodHandle const$79 = RuntimeHelper.downcallHandle(
        "strcasecmp_l",
        constants$0.const$29
    );
    static final FunctionDescriptor const$80 = FunctionDescriptor.of(JAVA_INT,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        JAVA_LONG,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$81 = RuntimeHelper.downcallHandle(
        "strncasecmp_l",
        constants$0.const$80
    );
    static final MethodHandle const$82 = RuntimeHelper.downcallHandle(
        "explicit_bzero",
        constants$0.const$68
    );
    static final MethodHandle const$83 = RuntimeHelper.downcallHandle(
        "strsep",
        constants$0.const$14
    );
    static final MethodHandle const$84 = RuntimeHelper.downcallHandle(
        "strsignal",
        constants$0.const$59
    );
    static final MethodHandle const$85 = RuntimeHelper.downcallHandle(
        "__stpcpy",
        constants$0.const$14
    );
    static final MethodHandle const$86 = RuntimeHelper.downcallHandle(
        "stpcpy",
        constants$0.const$14
    );
    static final MethodHandle const$87 = RuntimeHelper.downcallHandle(
        "__stpncpy",
        constants$0.const$3
    );
    static final MethodHandle const$88 = RuntimeHelper.downcallHandle(
        "stpncpy",
        constants$0.const$3
    );
    static final MethodHandle const$89 = RuntimeHelper.downcallHandle(
        "strlcpy",
        constants$0.const$23
    );
    static final MethodHandle const$90 = RuntimeHelper.downcallHandle(
        "strlcat",
        constants$0.const$23
    );
    static final StructLayout const$91 = MemoryLayout.structLayout(
        MemoryLayout.sequenceLayout(3, MemoryLayout.sequenceLayout(3, JAVA_FLOAT)).withName("vals")
    ).withName("skcms_Matrix3x3");
    static final FunctionDescriptor const$92 = FunctionDescriptor.of(JAVA_BOOLEAN,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$93 = RuntimeHelper.downcallHandle(
        "skcms_Matrix3x3_invert",
        constants$0.const$92
    );
    static final FunctionDescriptor const$94 = FunctionDescriptor.of(MemoryLayout.structLayout(
        MemoryLayout.sequenceLayout(3, MemoryLayout.sequenceLayout(3, JAVA_FLOAT)).withName("vals")
    ).withName("skcms_Matrix3x3"),
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$95 = RuntimeHelper.downcallHandle(
        "skcms_Matrix3x3_concat",
        constants$0.const$94
    );
    static final StructLayout const$96 = MemoryLayout.structLayout(
        MemoryLayout.sequenceLayout(3, MemoryLayout.sequenceLayout(4, JAVA_FLOAT)).withName("vals")
    ).withName("skcms_Matrix3x4");
    static final StructLayout const$97 = MemoryLayout.structLayout(
        JAVA_FLOAT.withName("g"),
        JAVA_FLOAT.withName("a"),
        JAVA_FLOAT.withName("b"),
        JAVA_FLOAT.withName("c"),
        JAVA_FLOAT.withName("d"),
        JAVA_FLOAT.withName("e"),
        JAVA_FLOAT.withName("f")
    ).withName("skcms_TransferFunction");
    static final VarHandle const$98 = constants$0.const$97.varHandle(MemoryLayout.PathElement.groupElement("g"));
    static final VarHandle const$99 = constants$0.const$97.varHandle(MemoryLayout.PathElement.groupElement("a"));
    static final VarHandle const$100 = constants$0.const$97.varHandle(MemoryLayout.PathElement.groupElement("b"));
    static final VarHandle const$101 = constants$0.const$97.varHandle(MemoryLayout.PathElement.groupElement("c"));
    static final VarHandle const$102 = constants$0.const$97.varHandle(MemoryLayout.PathElement.groupElement("d"));
    static final VarHandle const$103 = constants$0.const$97.varHandle(MemoryLayout.PathElement.groupElement("e"));
    static final VarHandle const$104 = constants$0.const$97.varHandle(MemoryLayout.PathElement.groupElement("f"));
    static final FunctionDescriptor const$105 = FunctionDescriptor.of(JAVA_FLOAT,
        RuntimeHelper.POINTER,
        JAVA_FLOAT
    );
    static final MethodHandle const$106 = RuntimeHelper.downcallHandle(
        "skcms_TransferFunction_eval",
        constants$0.const$105
    );
    static final MethodHandle const$107 = RuntimeHelper.downcallHandle(
        "skcms_TransferFunction_invert",
        constants$0.const$92
    );
    static final FunctionDescriptor const$108 = FunctionDescriptor.of(JAVA_INT,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$109 = RuntimeHelper.downcallHandle(
        "skcms_TransferFunction_getType",
        constants$0.const$108
    );
    static final FunctionDescriptor const$110 = FunctionDescriptor.of(JAVA_BOOLEAN,
        RuntimeHelper.POINTER,
        JAVA_FLOAT,
        JAVA_FLOAT,
        JAVA_FLOAT,
        JAVA_FLOAT,
        JAVA_FLOAT,
        JAVA_FLOAT
    );
    static final MethodHandle const$111 = RuntimeHelper.downcallHandle(
        "skcms_TransferFunction_makePQish",
        constants$0.const$110
    );
    static final MethodHandle const$112 = RuntimeHelper.downcallHandle(
        "skcms_TransferFunction_makeScaledHLGish",
        constants$0.const$110
    );
    static final FunctionDescriptor const$113 = FunctionDescriptor.of(JAVA_BOOLEAN,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$114 = RuntimeHelper.downcallHandle(
        "skcms_TransferFunction_isSRGBish",
        constants$0.const$113
    );
    static final MethodHandle const$115 = RuntimeHelper.downcallHandle(
        "skcms_TransferFunction_isPQish",
        constants$0.const$113
    );
    static final MethodHandle const$116 = RuntimeHelper.downcallHandle(
        "skcms_TransferFunction_isHLGish",
        constants$0.const$113
    );
    static final UnionLayout const$117 = MemoryLayout.unionLayout(
        MemoryLayout.structLayout(
            JAVA_INT.withName("alias_of_table_entries"),
            MemoryLayout.structLayout(
                JAVA_FLOAT.withName("g"),
                JAVA_FLOAT.withName("a"),
                JAVA_FLOAT.withName("b"),
                JAVA_FLOAT.withName("c"),
                JAVA_FLOAT.withName("d"),
                JAVA_FLOAT.withName("e"),
                JAVA_FLOAT.withName("f")
            ).withName("parametric")
        ).withName("$anon$0"),
        MemoryLayout.structLayout(
            JAVA_INT.withName("table_entries"),
            MemoryLayout.paddingLayout(4),
            RuntimeHelper.POINTER.withName("table_8"),
            RuntimeHelper.POINTER.withName("table_16")
        ).withName("$anon$1")
    ).withName("skcms_Curve");
    static final VarHandle const$118 = constants$0.const$117.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("alias_of_table_entries"));
    static final VarHandle const$119 = constants$0.const$117.varHandle(MemoryLayout.PathElement.groupElement("$anon$1"), MemoryLayout.PathElement.groupElement("table_entries"));
    static final VarHandle const$120 = constants$0.const$117.varHandle(MemoryLayout.PathElement.groupElement("$anon$1"), MemoryLayout.PathElement.groupElement("table_8"));
    static final VarHandle const$121 = constants$0.const$117.varHandle(MemoryLayout.PathElement.groupElement("$anon$1"), MemoryLayout.PathElement.groupElement("table_16"));
    static final StructLayout const$122 = MemoryLayout.structLayout(
        JAVA_INT.withName("input_channels"),
        MemoryLayout.paddingLayout(4),
        MemoryLayout.sequenceLayout(4, MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                JAVA_INT.withName("alias_of_table_entries"),
                MemoryLayout.structLayout(
                    JAVA_FLOAT.withName("g"),
                    JAVA_FLOAT.withName("a"),
                    JAVA_FLOAT.withName("b"),
                    JAVA_FLOAT.withName("c"),
                    JAVA_FLOAT.withName("d"),
                    JAVA_FLOAT.withName("e"),
                    JAVA_FLOAT.withName("f")
                ).withName("parametric")
            ).withName("$anon$0"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("table_entries"),
                MemoryLayout.paddingLayout(4),
                RuntimeHelper.POINTER.withName("table_8"),
                RuntimeHelper.POINTER.withName("table_16")
            ).withName("$anon$1")
        ).withName("skcms_Curve")).withName("input_curves"),
        MemoryLayout.sequenceLayout(4, JAVA_BYTE).withName("grid_points"),
        MemoryLayout.paddingLayout(4),
        RuntimeHelper.POINTER.withName("grid_8"),
        RuntimeHelper.POINTER.withName("grid_16"),
        JAVA_INT.withName("matrix_channels"),
        MemoryLayout.paddingLayout(4),
        MemoryLayout.sequenceLayout(3, MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                JAVA_INT.withName("alias_of_table_entries"),
                MemoryLayout.structLayout(
                    JAVA_FLOAT.withName("g"),
                    JAVA_FLOAT.withName("a"),
                    JAVA_FLOAT.withName("b"),
                    JAVA_FLOAT.withName("c"),
                    JAVA_FLOAT.withName("d"),
                    JAVA_FLOAT.withName("e"),
                    JAVA_FLOAT.withName("f")
                ).withName("parametric")
            ).withName("$anon$0"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("table_entries"),
                MemoryLayout.paddingLayout(4),
                RuntimeHelper.POINTER.withName("table_8"),
                RuntimeHelper.POINTER.withName("table_16")
            ).withName("$anon$1")
        ).withName("skcms_Curve")).withName("matrix_curves"),
        MemoryLayout.structLayout(
            MemoryLayout.sequenceLayout(3, MemoryLayout.sequenceLayout(4, JAVA_FLOAT)).withName("vals")
        ).withName("matrix"),
        JAVA_INT.withName("output_channels"),
        MemoryLayout.paddingLayout(4),
        MemoryLayout.sequenceLayout(3, MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                JAVA_INT.withName("alias_of_table_entries"),
                MemoryLayout.structLayout(
                    JAVA_FLOAT.withName("g"),
                    JAVA_FLOAT.withName("a"),
                    JAVA_FLOAT.withName("b"),
                    JAVA_FLOAT.withName("c"),
                    JAVA_FLOAT.withName("d"),
                    JAVA_FLOAT.withName("e"),
                    JAVA_FLOAT.withName("f")
                ).withName("parametric")
            ).withName("$anon$0"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("table_entries"),
                MemoryLayout.paddingLayout(4),
                RuntimeHelper.POINTER.withName("table_8"),
                RuntimeHelper.POINTER.withName("table_16")
            ).withName("$anon$1")
        ).withName("skcms_Curve")).withName("output_curves")
    ).withName("skcms_A2B");
    static final VarHandle const$123 = constants$0.const$122.varHandle(MemoryLayout.PathElement.groupElement("input_channels"));
    static final VarHandle const$124 = constants$0.const$122.varHandle(MemoryLayout.PathElement.groupElement("grid_8"));
    static final VarHandle const$125 = constants$0.const$122.varHandle(MemoryLayout.PathElement.groupElement("grid_16"));
    static final VarHandle const$126 = constants$0.const$122.varHandle(MemoryLayout.PathElement.groupElement("matrix_channels"));
    static final VarHandle const$127 = constants$0.const$122.varHandle(MemoryLayout.PathElement.groupElement("output_channels"));
    static final StructLayout const$128 = MemoryLayout.structLayout(
        JAVA_INT.withName("input_channels"),
        MemoryLayout.paddingLayout(4),
        MemoryLayout.sequenceLayout(3, MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                JAVA_INT.withName("alias_of_table_entries"),
                MemoryLayout.structLayout(
                    JAVA_FLOAT.withName("g"),
                    JAVA_FLOAT.withName("a"),
                    JAVA_FLOAT.withName("b"),
                    JAVA_FLOAT.withName("c"),
                    JAVA_FLOAT.withName("d"),
                    JAVA_FLOAT.withName("e"),
                    JAVA_FLOAT.withName("f")
                ).withName("parametric")
            ).withName("$anon$0"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("table_entries"),
                MemoryLayout.paddingLayout(4),
                RuntimeHelper.POINTER.withName("table_8"),
                RuntimeHelper.POINTER.withName("table_16")
            ).withName("$anon$1")
        ).withName("skcms_Curve")).withName("input_curves"),
        JAVA_INT.withName("matrix_channels"),
        MemoryLayout.structLayout(
            MemoryLayout.sequenceLayout(3, MemoryLayout.sequenceLayout(4, JAVA_FLOAT)).withName("vals")
        ).withName("matrix"),
        MemoryLayout.paddingLayout(4),
        MemoryLayout.sequenceLayout(3, MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                JAVA_INT.withName("alias_of_table_entries"),
                MemoryLayout.structLayout(
                    JAVA_FLOAT.withName("g"),
                    JAVA_FLOAT.withName("a"),
                    JAVA_FLOAT.withName("b"),
                    JAVA_FLOAT.withName("c"),
                    JAVA_FLOAT.withName("d"),
                    JAVA_FLOAT.withName("e"),
                    JAVA_FLOAT.withName("f")
                ).withName("parametric")
            ).withName("$anon$0"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("table_entries"),
                MemoryLayout.paddingLayout(4),
                RuntimeHelper.POINTER.withName("table_8"),
                RuntimeHelper.POINTER.withName("table_16")
            ).withName("$anon$1")
        ).withName("skcms_Curve")).withName("matrix_curves"),
        JAVA_INT.withName("output_channels"),
        MemoryLayout.sequenceLayout(4, JAVA_BYTE).withName("grid_points"),
        RuntimeHelper.POINTER.withName("grid_8"),
        RuntimeHelper.POINTER.withName("grid_16"),
        MemoryLayout.sequenceLayout(4, MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                JAVA_INT.withName("alias_of_table_entries"),
                MemoryLayout.structLayout(
                    JAVA_FLOAT.withName("g"),
                    JAVA_FLOAT.withName("a"),
                    JAVA_FLOAT.withName("b"),
                    JAVA_FLOAT.withName("c"),
                    JAVA_FLOAT.withName("d"),
                    JAVA_FLOAT.withName("e"),
                    JAVA_FLOAT.withName("f")
                ).withName("parametric")
            ).withName("$anon$0"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("table_entries"),
                MemoryLayout.paddingLayout(4),
                RuntimeHelper.POINTER.withName("table_8"),
                RuntimeHelper.POINTER.withName("table_16")
            ).withName("$anon$1")
        ).withName("skcms_Curve")).withName("output_curves")
    ).withName("skcms_B2A");
    static final VarHandle const$129 = constants$0.const$128.varHandle(MemoryLayout.PathElement.groupElement("input_channels"));
    static final VarHandle const$130 = constants$0.const$128.varHandle(MemoryLayout.PathElement.groupElement("matrix_channels"));
    static final VarHandle const$131 = constants$0.const$128.varHandle(MemoryLayout.PathElement.groupElement("output_channels"));
    static final VarHandle const$132 = constants$0.const$128.varHandle(MemoryLayout.PathElement.groupElement("grid_8"));
    static final VarHandle const$133 = constants$0.const$128.varHandle(MemoryLayout.PathElement.groupElement("grid_16"));
    static final StructLayout const$134 = MemoryLayout.structLayout(
        JAVA_BYTE.withName("color_primaries"),
        JAVA_BYTE.withName("transfer_characteristics"),
        JAVA_BYTE.withName("matrix_coefficients"),
        JAVA_BYTE.withName("video_full_range_flag")
    ).withName("skcms_CICP");
    static final VarHandle const$135 = constants$0.const$134.varHandle(MemoryLayout.PathElement.groupElement("color_primaries"));
    static final VarHandle const$136 = constants$0.const$134.varHandle(MemoryLayout.PathElement.groupElement("transfer_characteristics"));
    static final VarHandle const$137 = constants$0.const$134.varHandle(MemoryLayout.PathElement.groupElement("matrix_coefficients"));
    static final VarHandle const$138 = constants$0.const$134.varHandle(MemoryLayout.PathElement.groupElement("video_full_range_flag"));
    static final StructLayout const$139 = MemoryLayout.structLayout(
        RuntimeHelper.POINTER.withName("buffer"),
        JAVA_INT.withName("size"),
        JAVA_INT.withName("data_color_space"),
        JAVA_INT.withName("pcs"),
        JAVA_INT.withName("tag_count"),
        JAVA_BOOLEAN.withName("has_trc"),
        MemoryLayout.paddingLayout(7),
        MemoryLayout.sequenceLayout(3, MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                JAVA_INT.withName("alias_of_table_entries"),
                MemoryLayout.structLayout(
                    JAVA_FLOAT.withName("g"),
                    JAVA_FLOAT.withName("a"),
                    JAVA_FLOAT.withName("b"),
                    JAVA_FLOAT.withName("c"),
                    JAVA_FLOAT.withName("d"),
                    JAVA_FLOAT.withName("e"),
                    JAVA_FLOAT.withName("f")
                ).withName("parametric")
            ).withName("$anon$0"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("table_entries"),
                MemoryLayout.paddingLayout(4),
                RuntimeHelper.POINTER.withName("table_8"),
                RuntimeHelper.POINTER.withName("table_16")
            ).withName("$anon$1")
        ).withName("skcms_Curve")).withName("trc"),
        JAVA_BOOLEAN.withName("has_toXYZD50"),
        MemoryLayout.paddingLayout(3),
        MemoryLayout.structLayout(
            MemoryLayout.sequenceLayout(3, MemoryLayout.sequenceLayout(3, JAVA_FLOAT)).withName("vals")
        ).withName("toXYZD50"),
        JAVA_BOOLEAN.withName("has_A2B"),
        MemoryLayout.paddingLayout(7),
        MemoryLayout.structLayout(
            JAVA_INT.withName("input_channels"),
            MemoryLayout.paddingLayout(4),
            MemoryLayout.sequenceLayout(4, MemoryLayout.unionLayout(
                MemoryLayout.structLayout(
                    JAVA_INT.withName("alias_of_table_entries"),
                    MemoryLayout.structLayout(
                        JAVA_FLOAT.withName("g"),
                        JAVA_FLOAT.withName("a"),
                        JAVA_FLOAT.withName("b"),
                        JAVA_FLOAT.withName("c"),
                        JAVA_FLOAT.withName("d"),
                        JAVA_FLOAT.withName("e"),
                        JAVA_FLOAT.withName("f")
                    ).withName("parametric")
                ).withName("$anon$0"),
                MemoryLayout.structLayout(
                    JAVA_INT.withName("table_entries"),
                    MemoryLayout.paddingLayout(4),
                    RuntimeHelper.POINTER.withName("table_8"),
                    RuntimeHelper.POINTER.withName("table_16")
                ).withName("$anon$1")
            ).withName("skcms_Curve")).withName("input_curves"),
            MemoryLayout.sequenceLayout(4, JAVA_BYTE).withName("grid_points"),
            MemoryLayout.paddingLayout(4),
            RuntimeHelper.POINTER.withName("grid_8"),
            RuntimeHelper.POINTER.withName("grid_16"),
            JAVA_INT.withName("matrix_channels"),
            MemoryLayout.paddingLayout(4),
            MemoryLayout.sequenceLayout(3, MemoryLayout.unionLayout(
                MemoryLayout.structLayout(
                    JAVA_INT.withName("alias_of_table_entries"),
                    MemoryLayout.structLayout(
                        JAVA_FLOAT.withName("g"),
                        JAVA_FLOAT.withName("a"),
                        JAVA_FLOAT.withName("b"),
                        JAVA_FLOAT.withName("c"),
                        JAVA_FLOAT.withName("d"),
                        JAVA_FLOAT.withName("e"),
                        JAVA_FLOAT.withName("f")
                    ).withName("parametric")
                ).withName("$anon$0"),
                MemoryLayout.structLayout(
                    JAVA_INT.withName("table_entries"),
                    MemoryLayout.paddingLayout(4),
                    RuntimeHelper.POINTER.withName("table_8"),
                    RuntimeHelper.POINTER.withName("table_16")
                ).withName("$anon$1")
            ).withName("skcms_Curve")).withName("matrix_curves"),
            MemoryLayout.structLayout(
                MemoryLayout.sequenceLayout(3, MemoryLayout.sequenceLayout(4, JAVA_FLOAT)).withName("vals")
            ).withName("matrix"),
            JAVA_INT.withName("output_channels"),
            MemoryLayout.paddingLayout(4),
            MemoryLayout.sequenceLayout(3, MemoryLayout.unionLayout(
                MemoryLayout.structLayout(
                    JAVA_INT.withName("alias_of_table_entries"),
                    MemoryLayout.structLayout(
                        JAVA_FLOAT.withName("g"),
                        JAVA_FLOAT.withName("a"),
                        JAVA_FLOAT.withName("b"),
                        JAVA_FLOAT.withName("c"),
                        JAVA_FLOAT.withName("d"),
                        JAVA_FLOAT.withName("e"),
                        JAVA_FLOAT.withName("f")
                    ).withName("parametric")
                ).withName("$anon$0"),
                MemoryLayout.structLayout(
                    JAVA_INT.withName("table_entries"),
                    MemoryLayout.paddingLayout(4),
                    RuntimeHelper.POINTER.withName("table_8"),
                    RuntimeHelper.POINTER.withName("table_16")
                ).withName("$anon$1")
            ).withName("skcms_Curve")).withName("output_curves")
        ).withName("A2B"),
        JAVA_BOOLEAN.withName("has_B2A"),
        MemoryLayout.paddingLayout(7),
        MemoryLayout.structLayout(
            JAVA_INT.withName("input_channels"),
            MemoryLayout.paddingLayout(4),
            MemoryLayout.sequenceLayout(3, MemoryLayout.unionLayout(
                MemoryLayout.structLayout(
                    JAVA_INT.withName("alias_of_table_entries"),
                    MemoryLayout.structLayout(
                        JAVA_FLOAT.withName("g"),
                        JAVA_FLOAT.withName("a"),
                        JAVA_FLOAT.withName("b"),
                        JAVA_FLOAT.withName("c"),
                        JAVA_FLOAT.withName("d"),
                        JAVA_FLOAT.withName("e"),
                        JAVA_FLOAT.withName("f")
                    ).withName("parametric")
                ).withName("$anon$0"),
                MemoryLayout.structLayout(
                    JAVA_INT.withName("table_entries"),
                    MemoryLayout.paddingLayout(4),
                    RuntimeHelper.POINTER.withName("table_8"),
                    RuntimeHelper.POINTER.withName("table_16")
                ).withName("$anon$1")
            ).withName("skcms_Curve")).withName("input_curves"),
            JAVA_INT.withName("matrix_channels"),
            MemoryLayout.structLayout(
                MemoryLayout.sequenceLayout(3, MemoryLayout.sequenceLayout(4, JAVA_FLOAT)).withName("vals")
            ).withName("matrix"),
            MemoryLayout.paddingLayout(4),
            MemoryLayout.sequenceLayout(3, MemoryLayout.unionLayout(
                MemoryLayout.structLayout(
                    JAVA_INT.withName("alias_of_table_entries"),
                    MemoryLayout.structLayout(
                        JAVA_FLOAT.withName("g"),
                        JAVA_FLOAT.withName("a"),
                        JAVA_FLOAT.withName("b"),
                        JAVA_FLOAT.withName("c"),
                        JAVA_FLOAT.withName("d"),
                        JAVA_FLOAT.withName("e"),
                        JAVA_FLOAT.withName("f")
                    ).withName("parametric")
                ).withName("$anon$0"),
                MemoryLayout.structLayout(
                    JAVA_INT.withName("table_entries"),
                    MemoryLayout.paddingLayout(4),
                    RuntimeHelper.POINTER.withName("table_8"),
                    RuntimeHelper.POINTER.withName("table_16")
                ).withName("$anon$1")
            ).withName("skcms_Curve")).withName("matrix_curves"),
            JAVA_INT.withName("output_channels"),
            MemoryLayout.sequenceLayout(4, JAVA_BYTE).withName("grid_points"),
            RuntimeHelper.POINTER.withName("grid_8"),
            RuntimeHelper.POINTER.withName("grid_16"),
            MemoryLayout.sequenceLayout(4, MemoryLayout.unionLayout(
                MemoryLayout.structLayout(
                    JAVA_INT.withName("alias_of_table_entries"),
                    MemoryLayout.structLayout(
                        JAVA_FLOAT.withName("g"),
                        JAVA_FLOAT.withName("a"),
                        JAVA_FLOAT.withName("b"),
                        JAVA_FLOAT.withName("c"),
                        JAVA_FLOAT.withName("d"),
                        JAVA_FLOAT.withName("e"),
                        JAVA_FLOAT.withName("f")
                    ).withName("parametric")
                ).withName("$anon$0"),
                MemoryLayout.structLayout(
                    JAVA_INT.withName("table_entries"),
                    MemoryLayout.paddingLayout(4),
                    RuntimeHelper.POINTER.withName("table_8"),
                    RuntimeHelper.POINTER.withName("table_16")
                ).withName("$anon$1")
            ).withName("skcms_Curve")).withName("output_curves")
        ).withName("B2A"),
        JAVA_BOOLEAN.withName("has_CICP"),
        MemoryLayout.structLayout(
            JAVA_BYTE.withName("color_primaries"),
            JAVA_BYTE.withName("transfer_characteristics"),
            JAVA_BYTE.withName("matrix_coefficients"),
            JAVA_BYTE.withName("video_full_range_flag")
        ).withName("CICP"),
        MemoryLayout.paddingLayout(3)
    ).withName("skcms_ICCProfile");
    static final VarHandle const$140 = constants$0.const$139.varHandle(MemoryLayout.PathElement.groupElement("buffer"));
    static final VarHandle const$141 = constants$0.const$139.varHandle(MemoryLayout.PathElement.groupElement("size"));
    static final VarHandle const$142 = constants$0.const$139.varHandle(MemoryLayout.PathElement.groupElement("data_color_space"));
    static final VarHandle const$143 = constants$0.const$139.varHandle(MemoryLayout.PathElement.groupElement("pcs"));
    static final VarHandle const$144 = constants$0.const$139.varHandle(MemoryLayout.PathElement.groupElement("tag_count"));
    static final VarHandle const$145 = constants$0.const$139.varHandle(MemoryLayout.PathElement.groupElement("has_trc"));
    static final VarHandle const$146 = constants$0.const$139.varHandle(MemoryLayout.PathElement.groupElement("has_toXYZD50"));
    static final VarHandle const$147 = constants$0.const$139.varHandle(MemoryLayout.PathElement.groupElement("has_A2B"));
    static final VarHandle const$148 = constants$0.const$139.varHandle(MemoryLayout.PathElement.groupElement("has_B2A"));
    static final VarHandle const$149 = constants$0.const$139.varHandle(MemoryLayout.PathElement.groupElement("has_CICP"));
    static final FunctionDescriptor const$150 = FunctionDescriptor.of(RuntimeHelper.POINTER);
    static final MethodHandle const$151 = RuntimeHelper.downcallHandle(
        "skcms_sRGB_profile",
        constants$0.const$150
    );
    static final MethodHandle const$152 = RuntimeHelper.downcallHandle(
        "skcms_XYZD50_profile",
        constants$0.const$150
    );
    static final MethodHandle const$153 = RuntimeHelper.downcallHandle(
        "skcms_sRGB_TransferFunction",
        constants$0.const$150
    );
    static final MethodHandle const$154 = RuntimeHelper.downcallHandle(
        "skcms_sRGB_Inverse_TransferFunction",
        constants$0.const$150
    );
    static final MethodHandle const$155 = RuntimeHelper.downcallHandle(
        "skcms_Identity_TransferFunction",
        constants$0.const$150
    );
    static final MethodHandle const$156 = RuntimeHelper.downcallHandle(
        "skcms_ApproximatelyEqualProfiles",
        constants$0.const$92
    );
    static final MethodHandle const$157 = RuntimeHelper.downcallHandle(
        "skcms_AreApproximateInverses",
        constants$0.const$92
    );
    static final MethodHandle const$158 = RuntimeHelper.downcallHandle(
        "skcms_TRCs_AreApproximateInverse",
        constants$0.const$92
    );
    static final FunctionDescriptor const$159 = FunctionDescriptor.of(JAVA_BOOLEAN,
        RuntimeHelper.POINTER,
        JAVA_LONG,
        RuntimeHelper.POINTER,
        JAVA_INT,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$160 = RuntimeHelper.downcallHandle(
        "skcms_ParseWithA2BPriority",
        constants$0.const$159
    );
    static final FunctionDescriptor const$161 = FunctionDescriptor.of(JAVA_BOOLEAN,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$162 = RuntimeHelper.downcallHandle(
        "skcms_ApproximateCurve",
        constants$0.const$161
    );
    static final MethodHandle const$163 = RuntimeHelper.downcallHandle(
        "skcms_GetCHAD",
        constants$0.const$92
    );
    static final MethodHandle const$164 = RuntimeHelper.downcallHandle(
        "skcms_GetWTPT",
        constants$0.const$92
    );
    static final FunctionDescriptor const$165 = FunctionDescriptor.of(JAVA_BOOLEAN,
        RuntimeHelper.POINTER,
        JAVA_INT,
        JAVA_INT,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        JAVA_INT,
        JAVA_INT,
        RuntimeHelper.POINTER,
        JAVA_LONG
    );
    static final MethodHandle const$166 = RuntimeHelper.downcallHandle(
        "skcms_Transform",
        constants$0.const$165
    );
    static final MethodHandle const$167 = RuntimeHelper.downcallHandle(
        "skcms_MakeUsableAsDestination",
        constants$0.const$113
    );
    static final MethodHandle const$168 = RuntimeHelper.downcallHandle(
        "skcms_MakeUsableAsDestinationWithSingleCurve",
        constants$0.const$113
    );
    static final FunctionDescriptor const$169 = FunctionDescriptor.of(JAVA_BOOLEAN,
        JAVA_FLOAT,
        JAVA_FLOAT,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$170 = RuntimeHelper.downcallHandle(
        "skcms_AdaptToXYZD50",
        constants$0.const$169
    );
    static final FunctionDescriptor const$171 = FunctionDescriptor.of(JAVA_BOOLEAN,
        JAVA_FLOAT,
        JAVA_FLOAT,
        JAVA_FLOAT,
        JAVA_FLOAT,
        JAVA_FLOAT,
        JAVA_FLOAT,
        JAVA_FLOAT,
        JAVA_FLOAT,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$172 = RuntimeHelper.downcallHandle(
        "skcms_PrimariesToXYZD50",
        constants$0.const$171
    );
    static final FunctionDescriptor const$173 = FunctionDescriptor.ofVoid();
    static final MethodHandle const$174 = RuntimeHelper.downcallHandle(
        "skcms_DisableRuntimeCPUDetection",
        constants$0.const$173
    );
    static final MemorySegment const$175 = MemorySegment.ofAddress(0L);
}


