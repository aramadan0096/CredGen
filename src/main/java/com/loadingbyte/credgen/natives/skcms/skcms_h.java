// Generated by jextract

package com.loadingbyte.credgen.natives.skcms;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class skcms_h  {

    public static final OfByte C_CHAR = JAVA_BYTE;
    public static final OfShort C_SHORT = JAVA_SHORT;
    public static final OfInt C_INT = JAVA_INT;
    public static final OfLong C_LONG = JAVA_LONG;
    public static final OfLong C_LONG_LONG = JAVA_LONG;
    public static final OfFloat C_FLOAT = JAVA_FLOAT;
    public static final OfDouble C_DOUBLE = JAVA_DOUBLE;
    public static final AddressLayout C_POINTER = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * #define true 1
     * }
     */
    public static int true_() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define false 0
     * }
     */
    public static int false_() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __bool_true_false_are_defined 1
     * }
     */
    public static int __bool_true_false_are_defined() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _STDINT_H 1
     * }
     */
    public static int _STDINT_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _FEATURES_H 1
     * }
     */
    public static int _FEATURES_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _DEFAULT_SOURCE 1
     * }
     */
    public static int _DEFAULT_SOURCE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __GLIBC_USE_ISOC2X 0
     * }
     */
    public static int __GLIBC_USE_ISOC2X() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __USE_ISOC11 1
     * }
     */
    public static int __USE_ISOC11() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __USE_ISOC99 1
     * }
     */
    public static int __USE_ISOC99() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __USE_ISOC95 1
     * }
     */
    public static int __USE_ISOC95() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __USE_POSIX_IMPLICITLY 1
     * }
     */
    public static int __USE_POSIX_IMPLICITLY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_SOURCE 1
     * }
     */
    public static int _POSIX_SOURCE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __USE_POSIX 1
     * }
     */
    public static int __USE_POSIX() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __USE_POSIX2 1
     * }
     */
    public static int __USE_POSIX2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __USE_POSIX199309 1
     * }
     */
    public static int __USE_POSIX199309() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __USE_POSIX199506 1
     * }
     */
    public static int __USE_POSIX199506() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __USE_XOPEN2K 1
     * }
     */
    public static int __USE_XOPEN2K() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __USE_XOPEN2K8 1
     * }
     */
    public static int __USE_XOPEN2K8() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _ATFILE_SOURCE 1
     * }
     */
    public static int _ATFILE_SOURCE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __WORDSIZE 64
     * }
     */
    public static int __WORDSIZE() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define __WORDSIZE_TIME64_COMPAT32 1
     * }
     */
    public static int __WORDSIZE_TIME64_COMPAT32() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __SYSCALL_WORDSIZE 64
     * }
     */
    public static int __SYSCALL_WORDSIZE() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define __USE_MISC 1
     * }
     */
    public static int __USE_MISC() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __USE_ATFILE 1
     * }
     */
    public static int __USE_ATFILE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __USE_FORTIFY_LEVEL 0
     * }
     */
    public static int __USE_FORTIFY_LEVEL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __GLIBC_USE_DEPRECATED_GETS 0
     * }
     */
    public static int __GLIBC_USE_DEPRECATED_GETS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __GLIBC_USE_DEPRECATED_SCANF 0
     * }
     */
    public static int __GLIBC_USE_DEPRECATED_SCANF() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __GLIBC_USE_C2X_STRTOL 0
     * }
     */
    public static int __GLIBC_USE_C2X_STRTOL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define _STDC_PREDEF_H 1
     * }
     */
    public static int _STDC_PREDEF_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __STDC_IEC_559__ 1
     * }
     */
    public static int __STDC_IEC_559__() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __STDC_IEC_559_COMPLEX__ 1
     * }
     */
    public static int __STDC_IEC_559_COMPLEX__() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __GNU_LIBRARY__ 6
     * }
     */
    public static int __GNU_LIBRARY__() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define __GLIBC__ 2
     * }
     */
    public static int __GLIBC__() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define __GLIBC_MINOR__ 39
     * }
     */
    public static int __GLIBC_MINOR__() {
        return (int)39L;
    }
    /**
     * {@snippet :
     * #define _SYS_CDEFS_H 1
     * }
     */
    public static int _SYS_CDEFS_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __glibc_c99_flexarr_available 1
     * }
     */
    public static int __glibc_c99_flexarr_available() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI 0
     * }
     */
    public static int __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __HAVE_GENERIC_SELECTION 1
     * }
     */
    public static int __HAVE_GENERIC_SELECTION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __GLIBC_USE_LIB_EXT2 0
     * }
     */
    public static int __GLIBC_USE_LIB_EXT2() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __GLIBC_USE_IEC_60559_BFP_EXT 0
     * }
     */
    public static int __GLIBC_USE_IEC_60559_BFP_EXT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __GLIBC_USE_IEC_60559_BFP_EXT_C2X 0
     * }
     */
    public static int __GLIBC_USE_IEC_60559_BFP_EXT_C2X() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __GLIBC_USE_IEC_60559_EXT 0
     * }
     */
    public static int __GLIBC_USE_IEC_60559_EXT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __GLIBC_USE_IEC_60559_FUNCS_EXT 0
     * }
     */
    public static int __GLIBC_USE_IEC_60559_FUNCS_EXT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X 0
     * }
     */
    public static int __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __GLIBC_USE_IEC_60559_TYPES_EXT 0
     * }
     */
    public static int __GLIBC_USE_IEC_60559_TYPES_EXT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define _BITS_TYPES_H 1
     * }
     */
    public static int _BITS_TYPES_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _BITS_TYPESIZES_H 1
     * }
     */
    public static int _BITS_TYPESIZES_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __OFF_T_MATCHES_OFF64_T 1
     * }
     */
    public static int __OFF_T_MATCHES_OFF64_T() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __INO_T_MATCHES_INO64_T 1
     * }
     */
    public static int __INO_T_MATCHES_INO64_T() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __RLIM_T_MATCHES_RLIM64_T 1
     * }
     */
    public static int __RLIM_T_MATCHES_RLIM64_T() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __STATFS_MATCHES_STATFS64 1
     * }
     */
    public static int __STATFS_MATCHES_STATFS64() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64 1
     * }
     */
    public static int __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __FD_SETSIZE 1024
     * }
     */
    public static int __FD_SETSIZE() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define _BITS_TIME64_H 1
     * }
     */
    public static int _BITS_TIME64_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _BITS_WCHAR_H 1
     * }
     */
    public static int _BITS_WCHAR_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _BITS_STDINT_INTN_H 1
     * }
     */
    public static int _BITS_STDINT_INTN_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _BITS_STDINT_UINTN_H 1
     * }
     */
    public static int _BITS_STDINT_UINTN_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _BITS_STDINT_LEAST_H 1
     * }
     */
    public static int _BITS_STDINT_LEAST_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _STRING_H 1
     * }
     */
    public static int _STRING_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _BITS_TYPES_LOCALE_T_H 1
     * }
     */
    public static int _BITS_TYPES_LOCALE_T_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _BITS_TYPES___LOCALE_T_H 1
     * }
     */
    public static int _BITS_TYPES___LOCALE_T_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _STRINGS_H 1
     * }
     */
    public static int _STRINGS_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * typedef long ptrdiff_t;
     * }
     */
    public static final OfLong ptrdiff_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long size_t;
     * }
     */
    public static final OfLong size_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef int wchar_t;
     * }
     */
    public static final OfInt wchar_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned char __u_char;
     * }
     */
    public static final OfByte __u_char = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef unsigned short __u_short;
     * }
     */
    public static final OfShort __u_short = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef unsigned int __u_int;
     * }
     */
    public static final OfInt __u_int = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned long __u_long;
     * }
     */
    public static final OfLong __u_long = JAVA_LONG;
    /**
     * {@snippet :
     * typedef signed char __int8_t;
     * }
     */
    public static final OfByte __int8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef unsigned char __uint8_t;
     * }
     */
    public static final OfByte __uint8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef short __int16_t;
     * }
     */
    public static final OfShort __int16_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef unsigned short __uint16_t;
     * }
     */
    public static final OfShort __uint16_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef int __int32_t;
     * }
     */
    public static final OfInt __int32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned int __uint32_t;
     * }
     */
    public static final OfInt __uint32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef long __int64_t;
     * }
     */
    public static final OfLong __int64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __uint64_t;
     * }
     */
    public static final OfLong __uint64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef signed char __int_least8_t;
     * }
     */
    public static final OfByte __int_least8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef unsigned char __uint_least8_t;
     * }
     */
    public static final OfByte __uint_least8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef short __int_least16_t;
     * }
     */
    public static final OfShort __int_least16_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef unsigned short __uint_least16_t;
     * }
     */
    public static final OfShort __uint_least16_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef int __int_least32_t;
     * }
     */
    public static final OfInt __int_least32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned int __uint_least32_t;
     * }
     */
    public static final OfInt __uint_least32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef long __int_least64_t;
     * }
     */
    public static final OfLong __int_least64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __uint_least64_t;
     * }
     */
    public static final OfLong __uint_least64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long __quad_t;
     * }
     */
    public static final OfLong __quad_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __u_quad_t;
     * }
     */
    public static final OfLong __u_quad_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long __intmax_t;
     * }
     */
    public static final OfLong __intmax_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __uintmax_t;
     * }
     */
    public static final OfLong __uintmax_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __dev_t;
     * }
     */
    public static final OfLong __dev_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned int __uid_t;
     * }
     */
    public static final OfInt __uid_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned int __gid_t;
     * }
     */
    public static final OfInt __gid_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned long __ino_t;
     * }
     */
    public static final OfLong __ino_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __ino64_t;
     * }
     */
    public static final OfLong __ino64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned int __mode_t;
     * }
     */
    public static final OfInt __mode_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned long __nlink_t;
     * }
     */
    public static final OfLong __nlink_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long __off_t;
     * }
     */
    public static final OfLong __off_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long __off64_t;
     * }
     */
    public static final OfLong __off64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef int __pid_t;
     * }
     */
    public static final OfInt __pid_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef long __clock_t;
     * }
     */
    public static final OfLong __clock_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __rlim_t;
     * }
     */
    public static final OfLong __rlim_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __rlim64_t;
     * }
     */
    public static final OfLong __rlim64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned int __id_t;
     * }
     */
    public static final OfInt __id_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef long __time_t;
     * }
     */
    public static final OfLong __time_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned int __useconds_t;
     * }
     */
    public static final OfInt __useconds_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef long __suseconds_t;
     * }
     */
    public static final OfLong __suseconds_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long __suseconds64_t;
     * }
     */
    public static final OfLong __suseconds64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef int __daddr_t;
     * }
     */
    public static final OfInt __daddr_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef int __key_t;
     * }
     */
    public static final OfInt __key_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef int __clockid_t;
     * }
     */
    public static final OfInt __clockid_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef void* __timer_t;
     * }
     */
    public static final AddressLayout __timer_t = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef long __blksize_t;
     * }
     */
    public static final OfLong __blksize_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long __blkcnt_t;
     * }
     */
    public static final OfLong __blkcnt_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long __blkcnt64_t;
     * }
     */
    public static final OfLong __blkcnt64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __fsblkcnt_t;
     * }
     */
    public static final OfLong __fsblkcnt_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __fsblkcnt64_t;
     * }
     */
    public static final OfLong __fsblkcnt64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __fsfilcnt_t;
     * }
     */
    public static final OfLong __fsfilcnt_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __fsfilcnt64_t;
     * }
     */
    public static final OfLong __fsfilcnt64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long __fsword_t;
     * }
     */
    public static final OfLong __fsword_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long __ssize_t;
     * }
     */
    public static final OfLong __ssize_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long __syscall_slong_t;
     * }
     */
    public static final OfLong __syscall_slong_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __syscall_ulong_t;
     * }
     */
    public static final OfLong __syscall_ulong_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long __loff_t;
     * }
     */
    public static final OfLong __loff_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef char* __caddr_t;
     * }
     */
    public static final AddressLayout __caddr_t = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef long __intptr_t;
     * }
     */
    public static final OfLong __intptr_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned int __socklen_t;
     * }
     */
    public static final OfInt __socklen_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef int __sig_atomic_t;
     * }
     */
    public static final OfInt __sig_atomic_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef signed char int8_t;
     * }
     */
    public static final OfByte int8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef short int16_t;
     * }
     */
    public static final OfShort int16_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef int int32_t;
     * }
     */
    public static final OfInt int32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef long int64_t;
     * }
     */
    public static final OfLong int64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned char uint8_t;
     * }
     */
    public static final OfByte uint8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef unsigned short uint16_t;
     * }
     */
    public static final OfShort uint16_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef unsigned int uint32_t;
     * }
     */
    public static final OfInt uint32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned long uint64_t;
     * }
     */
    public static final OfLong uint64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef signed char int_least8_t;
     * }
     */
    public static final OfByte int_least8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef short int_least16_t;
     * }
     */
    public static final OfShort int_least16_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef int int_least32_t;
     * }
     */
    public static final OfInt int_least32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef long int_least64_t;
     * }
     */
    public static final OfLong int_least64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned char uint_least8_t;
     * }
     */
    public static final OfByte uint_least8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef unsigned short uint_least16_t;
     * }
     */
    public static final OfShort uint_least16_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef unsigned int uint_least32_t;
     * }
     */
    public static final OfInt uint_least32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned long uint_least64_t;
     * }
     */
    public static final OfLong uint_least64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef signed char int_fast8_t;
     * }
     */
    public static final OfByte int_fast8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef long int_fast16_t;
     * }
     */
    public static final OfLong int_fast16_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long int_fast32_t;
     * }
     */
    public static final OfLong int_fast32_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long int_fast64_t;
     * }
     */
    public static final OfLong int_fast64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned char uint_fast8_t;
     * }
     */
    public static final OfByte uint_fast8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef unsigned long uint_fast16_t;
     * }
     */
    public static final OfLong uint_fast16_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long uint_fast32_t;
     * }
     */
    public static final OfLong uint_fast32_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long uint_fast64_t;
     * }
     */
    public static final OfLong uint_fast64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long intptr_t;
     * }
     */
    public static final OfLong intptr_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long uintptr_t;
     * }
     */
    public static final OfLong uintptr_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long intmax_t;
     * }
     */
    public static final OfLong intmax_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long uintmax_t;
     * }
     */
    public static final OfLong uintmax_t = JAVA_LONG;
    public static MethodHandle memcpy$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$4,"memcpy");
    }
    /**
     * {@snippet :
     * void* memcpy(void* __dest, void* __src, size_t __n);
     * }
     */
    public static MemorySegment memcpy(MemorySegment __dest, MemorySegment __src, long __n) {
        var mh$ = memcpy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__dest, __src, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memmove$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$5,"memmove");
    }
    /**
     * {@snippet :
     * void* memmove(void* __dest, void* __src, size_t __n);
     * }
     */
    public static MemorySegment memmove(MemorySegment __dest, MemorySegment __src, long __n) {
        var mh$ = memmove$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__dest, __src, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memccpy$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$7,"memccpy");
    }
    /**
     * {@snippet :
     * void* memccpy(void* __dest, void* __src, int __c, size_t __n);
     * }
     */
    public static MemorySegment memccpy(MemorySegment __dest, MemorySegment __src, int __c, long __n) {
        var mh$ = memccpy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__dest, __src, __c, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memset$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$9,"memset");
    }
    /**
     * {@snippet :
     * void* memset(void* __s, int __c, size_t __n);
     * }
     */
    public static MemorySegment memset(MemorySegment __s, int __c, long __n) {
        var mh$ = memset$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__s, __c, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memcmp$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$11,"memcmp");
    }
    /**
     * {@snippet :
     * int memcmp(void* __s1, void* __s2, size_t __n);
     * }
     */
    public static int memcmp(MemorySegment __s1, MemorySegment __s2, long __n) {
        var mh$ = memcmp$MH();
        try {
            return (int)mh$.invokeExact(__s1, __s2, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __memcmpeq$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$12,"__memcmpeq");
    }
    /**
     * {@snippet :
     * int __memcmpeq(void* __s1, void* __s2, size_t __n);
     * }
     */
    public static int __memcmpeq(MemorySegment __s1, MemorySegment __s2, long __n) {
        var mh$ = __memcmpeq$MH();
        try {
            return (int)mh$.invokeExact(__s1, __s2, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memchr$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$13,"memchr");
    }
    /**
     * {@snippet :
     * void* memchr(void* __s, int __c, size_t __n);
     * }
     */
    public static MemorySegment memchr(MemorySegment __s, int __c, long __n) {
        var mh$ = memchr$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__s, __c, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcpy$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$15,"strcpy");
    }
    /**
     * {@snippet :
     * char* strcpy(char* __dest, char* __src);
     * }
     */
    public static MemorySegment strcpy(MemorySegment __dest, MemorySegment __src) {
        var mh$ = strcpy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__dest, __src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strncpy$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$16,"strncpy");
    }
    /**
     * {@snippet :
     * char* strncpy(char* __dest, char* __src, size_t __n);
     * }
     */
    public static MemorySegment strncpy(MemorySegment __dest, MemorySegment __src, long __n) {
        var mh$ = strncpy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__dest, __src, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcat$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$17,"strcat");
    }
    /**
     * {@snippet :
     * char* strcat(char* __dest, char* __src);
     * }
     */
    public static MemorySegment strcat(MemorySegment __dest, MemorySegment __src) {
        var mh$ = strcat$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__dest, __src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strncat$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$18,"strncat");
    }
    /**
     * {@snippet :
     * char* strncat(char* __dest, char* __src, size_t __n);
     * }
     */
    public static MemorySegment strncat(MemorySegment __dest, MemorySegment __src, long __n) {
        var mh$ = strncat$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__dest, __src, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcmp$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$20,"strcmp");
    }
    /**
     * {@snippet :
     * int strcmp(char* __s1, char* __s2);
     * }
     */
    public static int strcmp(MemorySegment __s1, MemorySegment __s2) {
        var mh$ = strcmp$MH();
        try {
            return (int)mh$.invokeExact(__s1, __s2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strncmp$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$21,"strncmp");
    }
    /**
     * {@snippet :
     * int strncmp(char* __s1, char* __s2, size_t __n);
     * }
     */
    public static int strncmp(MemorySegment __s1, MemorySegment __s2, long __n) {
        var mh$ = strncmp$MH();
        try {
            return (int)mh$.invokeExact(__s1, __s2, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcoll$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$22,"strcoll");
    }
    /**
     * {@snippet :
     * int strcoll(char* __s1, char* __s2);
     * }
     */
    public static int strcoll(MemorySegment __s1, MemorySegment __s2) {
        var mh$ = strcoll$MH();
        try {
            return (int)mh$.invokeExact(__s1, __s2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strxfrm$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$24,"strxfrm");
    }
    /**
     * {@snippet :
     * unsigned long strxfrm(char* __dest, char* __src, size_t __n);
     * }
     */
    public static long strxfrm(MemorySegment __dest, MemorySegment __src, long __n) {
        var mh$ = strxfrm$MH();
        try {
            return (long)mh$.invokeExact(__dest, __src, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct __locale_struct* __locale_t;
     * }
     */
    public static final AddressLayout __locale_t = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct __locale_struct* locale_t;
     * }
     */
    public static final AddressLayout locale_t = RuntimeHelper.POINTER;
    public static MethodHandle strcoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$30,"strcoll_l");
    }
    /**
     * {@snippet :
     * int strcoll_l(char* __s1, char* __s2, locale_t __l);
     * }
     */
    public static int strcoll_l(MemorySegment __s1, MemorySegment __s2, MemorySegment __l) {
        var mh$ = strcoll_l$MH();
        try {
            return (int)mh$.invokeExact(__s1, __s2, __l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strxfrm_l$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$32,"strxfrm_l");
    }
    /**
     * {@snippet :
     * size_t strxfrm_l(char* __dest, char* __src, size_t __n, locale_t __l);
     * }
     */
    public static long strxfrm_l(MemorySegment __dest, MemorySegment __src, long __n, MemorySegment __l) {
        var mh$ = strxfrm_l$MH();
        try {
            return (long)mh$.invokeExact(__dest, __src, __n, __l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strdup$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$34,"strdup");
    }
    /**
     * {@snippet :
     * char* strdup(char* __s);
     * }
     */
    public static MemorySegment strdup(MemorySegment __s) {
        var mh$ = strdup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strndup$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$36,"strndup");
    }
    /**
     * {@snippet :
     * char* strndup(char* __string, size_t __n);
     * }
     */
    public static MemorySegment strndup(MemorySegment __string, long __n) {
        var mh$ = strndup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__string, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strchr$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$38,"strchr");
    }
    /**
     * {@snippet :
     * char* strchr(char* __s, int __c);
     * }
     */
    public static MemorySegment strchr(MemorySegment __s, int __c) {
        var mh$ = strchr$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__s, __c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strrchr$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$39,"strrchr");
    }
    /**
     * {@snippet :
     * char* strrchr(char* __s, int __c);
     * }
     */
    public static MemorySegment strrchr(MemorySegment __s, int __c) {
        var mh$ = strrchr$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__s, __c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strchrnul$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$40,"strchrnul");
    }
    /**
     * {@snippet :
     * char* strchrnul(char* __s, int __c);
     * }
     */
    public static MemorySegment strchrnul(MemorySegment __s, int __c) {
        var mh$ = strchrnul$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__s, __c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcspn$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$42,"strcspn");
    }
    /**
     * {@snippet :
     * unsigned long strcspn(char* __s, char* __reject);
     * }
     */
    public static long strcspn(MemorySegment __s, MemorySegment __reject) {
        var mh$ = strcspn$MH();
        try {
            return (long)mh$.invokeExact(__s, __reject);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strspn$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$43,"strspn");
    }
    /**
     * {@snippet :
     * unsigned long strspn(char* __s, char* __accept);
     * }
     */
    public static long strspn(MemorySegment __s, MemorySegment __accept) {
        var mh$ = strspn$MH();
        try {
            return (long)mh$.invokeExact(__s, __accept);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strpbrk$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$44,"strpbrk");
    }
    /**
     * {@snippet :
     * char* strpbrk(char* __s, char* __accept);
     * }
     */
    public static MemorySegment strpbrk(MemorySegment __s, MemorySegment __accept) {
        var mh$ = strpbrk$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__s, __accept);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strstr$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$45,"strstr");
    }
    /**
     * {@snippet :
     * char* strstr(char* __haystack, char* __needle);
     * }
     */
    public static MemorySegment strstr(MemorySegment __haystack, MemorySegment __needle) {
        var mh$ = strstr$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__haystack, __needle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtok$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$46,"strtok");
    }
    /**
     * {@snippet :
     * char* strtok(char* __s, char* __delim);
     * }
     */
    public static MemorySegment strtok(MemorySegment __s, MemorySegment __delim) {
        var mh$ = strtok$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__s, __delim);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __strtok_r$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$48,"__strtok_r");
    }
    /**
     * {@snippet :
     * char* __strtok_r(char* __s, char* __delim, char** __save_ptr);
     * }
     */
    public static MemorySegment __strtok_r(MemorySegment __s, MemorySegment __delim, MemorySegment __save_ptr) {
        var mh$ = __strtok_r$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__s, __delim, __save_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtok_r$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$49,"strtok_r");
    }
    /**
     * {@snippet :
     * char* strtok_r(char* __s, char* __delim, char** __save_ptr);
     * }
     */
    public static MemorySegment strtok_r(MemorySegment __s, MemorySegment __delim, MemorySegment __save_ptr) {
        var mh$ = strtok_r$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__s, __delim, __save_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcasestr$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$50,"strcasestr");
    }
    /**
     * {@snippet :
     * char* strcasestr(char* __haystack, char* __needle);
     * }
     */
    public static MemorySegment strcasestr(MemorySegment __haystack, MemorySegment __needle) {
        var mh$ = strcasestr$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__haystack, __needle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memmem$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$52,"memmem");
    }
    /**
     * {@snippet :
     * void* memmem(void* __haystack, size_t __haystacklen, void* __needle, size_t __needlelen);
     * }
     */
    public static MemorySegment memmem(MemorySegment __haystack, long __haystacklen, MemorySegment __needle, long __needlelen) {
        var mh$ = memmem$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__haystack, __haystacklen, __needle, __needlelen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mempcpy$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$53,"__mempcpy");
    }
    /**
     * {@snippet :
     * void* __mempcpy(void* __dest, void* __src, size_t __n);
     * }
     */
    public static MemorySegment __mempcpy(MemorySegment __dest, MemorySegment __src, long __n) {
        var mh$ = __mempcpy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__dest, __src, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mempcpy$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$54,"mempcpy");
    }
    /**
     * {@snippet :
     * void* mempcpy(void* __dest, void* __src, size_t __n);
     * }
     */
    public static MemorySegment mempcpy(MemorySegment __dest, MemorySegment __src, long __n) {
        var mh$ = mempcpy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__dest, __src, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strlen$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$56,"strlen");
    }
    /**
     * {@snippet :
     * unsigned long strlen(char* __s);
     * }
     */
    public static long strlen(MemorySegment __s) {
        var mh$ = strlen$MH();
        try {
            return (long)mh$.invokeExact(__s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strnlen$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$58,"strnlen");
    }
    /**
     * {@snippet :
     * size_t strnlen(char* __string, size_t __maxlen);
     * }
     */
    public static long strnlen(MemorySegment __string, long __maxlen) {
        var mh$ = strnlen$MH();
        try {
            return (long)mh$.invokeExact(__string, __maxlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strerror$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$60,"strerror");
    }
    /**
     * {@snippet :
     * char* strerror(int __errnum);
     * }
     */
    public static MemorySegment strerror(int __errnum) {
        var mh$ = strerror$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__errnum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strerror_r$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$62,"strerror_r");
    }
    /**
     * {@snippet :
     * int strerror_r(int __errnum, char* __buf, size_t __buflen);
     * }
     */
    public static int strerror_r(int __errnum, MemorySegment __buf, long __buflen) {
        var mh$ = strerror_r$MH();
        try {
            return (int)mh$.invokeExact(__errnum, __buf, __buflen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strerror_l$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$64,"strerror_l");
    }
    /**
     * {@snippet :
     * char* strerror_l(int __errnum, locale_t __l);
     * }
     */
    public static MemorySegment strerror_l(int __errnum, MemorySegment __l) {
        var mh$ = strerror_l$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__errnum, __l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle bcmp$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$65,"bcmp");
    }
    /**
     * {@snippet :
     * int bcmp(void* __s1, void* __s2, size_t __n);
     * }
     */
    public static int bcmp(MemorySegment __s1, MemorySegment __s2, long __n) {
        var mh$ = bcmp$MH();
        try {
            return (int)mh$.invokeExact(__s1, __s2, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle bcopy$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$67,"bcopy");
    }
    /**
     * {@snippet :
     * void bcopy(void* __src, void* __dest, size_t __n);
     * }
     */
    public static void bcopy(MemorySegment __src, MemorySegment __dest, long __n) {
        var mh$ = bcopy$MH();
        try {
            mh$.invokeExact(__src, __dest, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle bzero$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$69,"bzero");
    }
    /**
     * {@snippet :
     * void bzero(void* __s, size_t __n);
     * }
     */
    public static void bzero(MemorySegment __s, long __n) {
        var mh$ = bzero$MH();
        try {
            mh$.invokeExact(__s, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle index$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$70,"index");
    }
    /**
     * {@snippet :
     * char* index(char* __s, int __c);
     * }
     */
    public static MemorySegment index(MemorySegment __s, int __c) {
        var mh$ = index$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__s, __c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rindex$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$71,"rindex");
    }
    /**
     * {@snippet :
     * char* rindex(char* __s, int __c);
     * }
     */
    public static MemorySegment rindex(MemorySegment __s, int __c) {
        var mh$ = rindex$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__s, __c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ffs$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$73,"ffs");
    }
    /**
     * {@snippet :
     * int ffs(int __i);
     * }
     */
    public static int ffs(int __i) {
        var mh$ = ffs$MH();
        try {
            return (int)mh$.invokeExact(__i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ffsl$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$75,"ffsl");
    }
    /**
     * {@snippet :
     * int ffsl(long __l);
     * }
     */
    public static int ffsl(long __l) {
        var mh$ = ffsl$MH();
        try {
            return (int)mh$.invokeExact(__l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ffsll$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$76,"ffsll");
    }
    /**
     * {@snippet :
     * int ffsll(long long __ll);
     * }
     */
    public static int ffsll(long __ll) {
        var mh$ = ffsll$MH();
        try {
            return (int)mh$.invokeExact(__ll);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcasecmp$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$77,"strcasecmp");
    }
    /**
     * {@snippet :
     * int strcasecmp(char* __s1, char* __s2);
     * }
     */
    public static int strcasecmp(MemorySegment __s1, MemorySegment __s2) {
        var mh$ = strcasecmp$MH();
        try {
            return (int)mh$.invokeExact(__s1, __s2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strncasecmp$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$78,"strncasecmp");
    }
    /**
     * {@snippet :
     * int strncasecmp(char* __s1, char* __s2, size_t __n);
     * }
     */
    public static int strncasecmp(MemorySegment __s1, MemorySegment __s2, long __n) {
        var mh$ = strncasecmp$MH();
        try {
            return (int)mh$.invokeExact(__s1, __s2, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcasecmp_l$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$79,"strcasecmp_l");
    }
    /**
     * {@snippet :
     * int strcasecmp_l(char* __s1, char* __s2, locale_t __loc);
     * }
     */
    public static int strcasecmp_l(MemorySegment __s1, MemorySegment __s2, MemorySegment __loc) {
        var mh$ = strcasecmp_l$MH();
        try {
            return (int)mh$.invokeExact(__s1, __s2, __loc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strncasecmp_l$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$81,"strncasecmp_l");
    }
    /**
     * {@snippet :
     * int strncasecmp_l(char* __s1, char* __s2, size_t __n, locale_t __loc);
     * }
     */
    public static int strncasecmp_l(MemorySegment __s1, MemorySegment __s2, long __n, MemorySegment __loc) {
        var mh$ = strncasecmp_l$MH();
        try {
            return (int)mh$.invokeExact(__s1, __s2, __n, __loc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle explicit_bzero$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$82,"explicit_bzero");
    }
    /**
     * {@snippet :
     * void explicit_bzero(void* __s, size_t __n);
     * }
     */
    public static void explicit_bzero(MemorySegment __s, long __n) {
        var mh$ = explicit_bzero$MH();
        try {
            mh$.invokeExact(__s, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strsep$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$83,"strsep");
    }
    /**
     * {@snippet :
     * char* strsep(char** __stringp, char* __delim);
     * }
     */
    public static MemorySegment strsep(MemorySegment __stringp, MemorySegment __delim) {
        var mh$ = strsep$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__stringp, __delim);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strsignal$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$84,"strsignal");
    }
    /**
     * {@snippet :
     * char* strsignal(int __sig);
     * }
     */
    public static MemorySegment strsignal(int __sig) {
        var mh$ = strsignal$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__sig);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stpcpy$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$85,"__stpcpy");
    }
    /**
     * {@snippet :
     * char* __stpcpy(char* __dest, char* __src);
     * }
     */
    public static MemorySegment __stpcpy(MemorySegment __dest, MemorySegment __src) {
        var mh$ = __stpcpy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__dest, __src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle stpcpy$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$86,"stpcpy");
    }
    /**
     * {@snippet :
     * char* stpcpy(char* __dest, char* __src);
     * }
     */
    public static MemorySegment stpcpy(MemorySegment __dest, MemorySegment __src) {
        var mh$ = stpcpy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__dest, __src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stpncpy$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$87,"__stpncpy");
    }
    /**
     * {@snippet :
     * char* __stpncpy(char* __dest, char* __src, size_t __n);
     * }
     */
    public static MemorySegment __stpncpy(MemorySegment __dest, MemorySegment __src, long __n) {
        var mh$ = __stpncpy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__dest, __src, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle stpncpy$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$88,"stpncpy");
    }
    /**
     * {@snippet :
     * char* stpncpy(char* __dest, char* __src, size_t __n);
     * }
     */
    public static MemorySegment stpncpy(MemorySegment __dest, MemorySegment __src, long __n) {
        var mh$ = stpncpy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__dest, __src, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strlcpy$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$89,"strlcpy");
    }
    /**
     * {@snippet :
     * unsigned long strlcpy(char* __dest, char* __src, size_t __n);
     * }
     */
    public static long strlcpy(MemorySegment __dest, MemorySegment __src, long __n) {
        var mh$ = strlcpy$MH();
        try {
            return (long)mh$.invokeExact(__dest, __src, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strlcat$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$90,"strlcat");
    }
    /**
     * {@snippet :
     * unsigned long strlcat(char* __dest, char* __src, size_t __n);
     * }
     */
    public static long strlcat(MemorySegment __dest, MemorySegment __src, long __n) {
        var mh$ = strlcat$MH();
        try {
            return (long)mh$.invokeExact(__dest, __src, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_Matrix3x3_invert$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$93,"skcms_Matrix3x3_invert");
    }
    /**
     * {@snippet :
     * _Bool skcms_Matrix3x3_invert(const skcms_Matrix3x3*, skcms_Matrix3x3*);
     * }
     */
    public static boolean skcms_Matrix3x3_invert(MemorySegment x0, MemorySegment x1) {
        var mh$ = skcms_Matrix3x3_invert$MH();
        try {
            return (boolean)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_Matrix3x3_concat$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$95,"skcms_Matrix3x3_concat");
    }
    /**
     * {@snippet :
     * skcms_Matrix3x3 skcms_Matrix3x3_concat(const skcms_Matrix3x3*, const skcms_Matrix3x3*);
     * }
     */
    public static MemorySegment skcms_Matrix3x3_concat(SegmentAllocator allocator, MemorySegment x1, MemorySegment x2) {
        var mh$ = skcms_Matrix3x3_concat$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_TransferFunction_eval$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$106,"skcms_TransferFunction_eval");
    }
    /**
     * {@snippet :
     * float skcms_TransferFunction_eval(const skcms_TransferFunction*, float);
     * }
     */
    public static float skcms_TransferFunction_eval(MemorySegment x0, float x1) {
        var mh$ = skcms_TransferFunction_eval$MH();
        try {
            return (float)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_TransferFunction_invert$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$107,"skcms_TransferFunction_invert");
    }
    /**
     * {@snippet :
     * _Bool skcms_TransferFunction_invert(const skcms_TransferFunction*, skcms_TransferFunction*);
     * }
     */
    public static boolean skcms_TransferFunction_invert(MemorySegment x0, MemorySegment x1) {
        var mh$ = skcms_TransferFunction_invert$MH();
        try {
            return (boolean)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum skcms_TFType.skcms_TFType_Invalid = 0;
     * }
     */
    public static int skcms_TFType_Invalid() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum skcms_TFType.skcms_TFType_sRGBish = 1;
     * }
     */
    public static int skcms_TFType_sRGBish() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum skcms_TFType.skcms_TFType_PQish = 2;
     * }
     */
    public static int skcms_TFType_PQish() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum skcms_TFType.skcms_TFType_HLGish = 3;
     * }
     */
    public static int skcms_TFType_HLGish() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum skcms_TFType.skcms_TFType_HLGinvish = 4;
     * }
     */
    public static int skcms_TFType_HLGinvish() {
        return (int)4L;
    }
    public static MethodHandle skcms_TransferFunction_getType$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$109,"skcms_TransferFunction_getType");
    }
    /**
     * {@snippet :
     * skcms_TFType skcms_TransferFunction_getType(const skcms_TransferFunction*);
     * }
     */
    public static int skcms_TransferFunction_getType(MemorySegment x0) {
        var mh$ = skcms_TransferFunction_getType$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_TransferFunction_makePQish$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$111,"skcms_TransferFunction_makePQish");
    }
    /**
     * {@snippet :
     * _Bool skcms_TransferFunction_makePQish(skcms_TransferFunction*, float A, float B, float C, float D, float E, float F);
     * }
     */
    public static boolean skcms_TransferFunction_makePQish(MemorySegment x0, float A, float B, float C, float D, float E, float F) {
        var mh$ = skcms_TransferFunction_makePQish$MH();
        try {
            return (boolean)mh$.invokeExact(x0, A, B, C, D, E, F);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_TransferFunction_makeScaledHLGish$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$112,"skcms_TransferFunction_makeScaledHLGish");
    }
    /**
     * {@snippet :
     * _Bool skcms_TransferFunction_makeScaledHLGish(skcms_TransferFunction*, float K, float R, float G, float a, float b, float c);
     * }
     */
    public static boolean skcms_TransferFunction_makeScaledHLGish(MemorySegment x0, float K, float R, float G, float a, float b, float c) {
        var mh$ = skcms_TransferFunction_makeScaledHLGish$MH();
        try {
            return (boolean)mh$.invokeExact(x0, K, R, G, a, b, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_TransferFunction_isSRGBish$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$114,"skcms_TransferFunction_isSRGBish");
    }
    /**
     * {@snippet :
     * _Bool skcms_TransferFunction_isSRGBish(const skcms_TransferFunction*);
     * }
     */
    public static boolean skcms_TransferFunction_isSRGBish(MemorySegment x0) {
        var mh$ = skcms_TransferFunction_isSRGBish$MH();
        try {
            return (boolean)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_TransferFunction_isPQish$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$115,"skcms_TransferFunction_isPQish");
    }
    /**
     * {@snippet :
     * _Bool skcms_TransferFunction_isPQish(const skcms_TransferFunction*);
     * }
     */
    public static boolean skcms_TransferFunction_isPQish(MemorySegment x0) {
        var mh$ = skcms_TransferFunction_isPQish$MH();
        try {
            return (boolean)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_TransferFunction_isHLGish$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$116,"skcms_TransferFunction_isHLGish");
    }
    /**
     * {@snippet :
     * _Bool skcms_TransferFunction_isHLGish(const skcms_TransferFunction*);
     * }
     */
    public static boolean skcms_TransferFunction_isHLGish(MemorySegment x0) {
        var mh$ = skcms_TransferFunction_isHLGish$MH();
        try {
            return (boolean)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_sRGB_profile$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$151,"skcms_sRGB_profile");
    }
    /**
     * {@snippet :
     * const skcms_ICCProfile* skcms_sRGB_profile();
     * }
     */
    public static MemorySegment skcms_sRGB_profile() {
        var mh$ = skcms_sRGB_profile$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_XYZD50_profile$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$152,"skcms_XYZD50_profile");
    }
    /**
     * {@snippet :
     * const skcms_ICCProfile* skcms_XYZD50_profile();
     * }
     */
    public static MemorySegment skcms_XYZD50_profile() {
        var mh$ = skcms_XYZD50_profile$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_sRGB_TransferFunction$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$153,"skcms_sRGB_TransferFunction");
    }
    /**
     * {@snippet :
     * const skcms_TransferFunction* skcms_sRGB_TransferFunction();
     * }
     */
    public static MemorySegment skcms_sRGB_TransferFunction() {
        var mh$ = skcms_sRGB_TransferFunction$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_sRGB_Inverse_TransferFunction$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$154,"skcms_sRGB_Inverse_TransferFunction");
    }
    /**
     * {@snippet :
     * const skcms_TransferFunction* skcms_sRGB_Inverse_TransferFunction();
     * }
     */
    public static MemorySegment skcms_sRGB_Inverse_TransferFunction() {
        var mh$ = skcms_sRGB_Inverse_TransferFunction$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_Identity_TransferFunction$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$155,"skcms_Identity_TransferFunction");
    }
    /**
     * {@snippet :
     * const skcms_TransferFunction* skcms_Identity_TransferFunction();
     * }
     */
    public static MemorySegment skcms_Identity_TransferFunction() {
        var mh$ = skcms_Identity_TransferFunction$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_ApproximatelyEqualProfiles$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$156,"skcms_ApproximatelyEqualProfiles");
    }
    /**
     * {@snippet :
     * _Bool skcms_ApproximatelyEqualProfiles(const skcms_ICCProfile* A, const skcms_ICCProfile* B);
     * }
     */
    public static boolean skcms_ApproximatelyEqualProfiles(MemorySegment A, MemorySegment B) {
        var mh$ = skcms_ApproximatelyEqualProfiles$MH();
        try {
            return (boolean)mh$.invokeExact(A, B);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_AreApproximateInverses$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$157,"skcms_AreApproximateInverses");
    }
    /**
     * {@snippet :
     * _Bool skcms_AreApproximateInverses(const skcms_Curve* curve, const skcms_TransferFunction* inv_tf);
     * }
     */
    public static boolean skcms_AreApproximateInverses(MemorySegment curve, MemorySegment inv_tf) {
        var mh$ = skcms_AreApproximateInverses$MH();
        try {
            return (boolean)mh$.invokeExact(curve, inv_tf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_TRCs_AreApproximateInverse$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$158,"skcms_TRCs_AreApproximateInverse");
    }
    /**
     * {@snippet :
     * _Bool skcms_TRCs_AreApproximateInverse(const skcms_ICCProfile* profile, const skcms_TransferFunction* inv_tf);
     * }
     */
    public static boolean skcms_TRCs_AreApproximateInverse(MemorySegment profile, MemorySegment inv_tf) {
        var mh$ = skcms_TRCs_AreApproximateInverse$MH();
        try {
            return (boolean)mh$.invokeExact(profile, inv_tf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_ParseWithA2BPriority$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$160,"skcms_ParseWithA2BPriority");
    }
    /**
     * {@snippet :
     * _Bool skcms_ParseWithA2BPriority(void*, size_t, int priority[], int priorities, skcms_ICCProfile*);
     * }
     */
    public static boolean skcms_ParseWithA2BPriority(MemorySegment x0, long x1, MemorySegment priority, int priorities, MemorySegment x4) {
        var mh$ = skcms_ParseWithA2BPriority$MH();
        try {
            return (boolean)mh$.invokeExact(x0, x1, priority, priorities, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_ApproximateCurve$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$162,"skcms_ApproximateCurve");
    }
    /**
     * {@snippet :
     * _Bool skcms_ApproximateCurve(const skcms_Curve* curve, skcms_TransferFunction* approx, float* max_error);
     * }
     */
    public static boolean skcms_ApproximateCurve(MemorySegment curve, MemorySegment approx, MemorySegment max_error) {
        var mh$ = skcms_ApproximateCurve$MH();
        try {
            return (boolean)mh$.invokeExact(curve, approx, max_error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_GetCHAD$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$163,"skcms_GetCHAD");
    }
    /**
     * {@snippet :
     * _Bool skcms_GetCHAD(const skcms_ICCProfile*, skcms_Matrix3x3*);
     * }
     */
    public static boolean skcms_GetCHAD(MemorySegment x0, MemorySegment x1) {
        var mh$ = skcms_GetCHAD$MH();
        try {
            return (boolean)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_GetWTPT$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$164,"skcms_GetWTPT");
    }
    /**
     * {@snippet :
     * _Bool skcms_GetWTPT(const skcms_ICCProfile*, float xyz[3]);
     * }
     */
    public static boolean skcms_GetWTPT(MemorySegment x0, MemorySegment xyz) {
        var mh$ = skcms_GetWTPT$MH();
        try {
            return (boolean)mh$.invokeExact(x0, xyz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .skcms_Signature_CMYK = 1129142603;
     * }
     */
    public static int skcms_Signature_CMYK() {
        return (int)1129142603L;
    }
    /**
     * {@snippet :
     * enum .skcms_Signature_Gray = 1196573017;
     * }
     */
    public static int skcms_Signature_Gray() {
        return (int)1196573017L;
    }
    /**
     * {@snippet :
     * enum .skcms_Signature_RGB = 1380401696;
     * }
     */
    public static int skcms_Signature_RGB() {
        return (int)1380401696L;
    }
    /**
     * {@snippet :
     * enum .skcms_Signature_Lab = 1281450528;
     * }
     */
    public static int skcms_Signature_Lab() {
        return (int)1281450528L;
    }
    /**
     * {@snippet :
     * enum .skcms_Signature_XYZ = 1482250784;
     * }
     */
    public static int skcms_Signature_XYZ() {
        return (int)1482250784L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_A_8 = 0;
     * }
     */
    public static int skcms_PixelFormat_A_8() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_A_8_ = 1;
     * }
     */
    public static int skcms_PixelFormat_A_8_() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_G_8 = 2;
     * }
     */
    public static int skcms_PixelFormat_G_8() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_G_8_ = 3;
     * }
     */
    public static int skcms_PixelFormat_G_8_() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_RGB_565 = 4;
     * }
     */
    public static int skcms_PixelFormat_RGB_565() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_BGR_565 = 5;
     * }
     */
    public static int skcms_PixelFormat_BGR_565() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_ABGR_4444 = 6;
     * }
     */
    public static int skcms_PixelFormat_ABGR_4444() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_ARGB_4444 = 7;
     * }
     */
    public static int skcms_PixelFormat_ARGB_4444() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_RGB_888 = 8;
     * }
     */
    public static int skcms_PixelFormat_RGB_888() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_BGR_888 = 9;
     * }
     */
    public static int skcms_PixelFormat_BGR_888() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_RGBA_8888 = 10;
     * }
     */
    public static int skcms_PixelFormat_RGBA_8888() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_BGRA_8888 = 11;
     * }
     */
    public static int skcms_PixelFormat_BGRA_8888() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_RGBA_8888_sRGB = 12;
     * }
     */
    public static int skcms_PixelFormat_RGBA_8888_sRGB() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_BGRA_8888_sRGB = 13;
     * }
     */
    public static int skcms_PixelFormat_BGRA_8888_sRGB() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_RGBA_1010102 = 14;
     * }
     */
    public static int skcms_PixelFormat_RGBA_1010102() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_BGRA_1010102 = 15;
     * }
     */
    public static int skcms_PixelFormat_BGRA_1010102() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_RGB_161616LE = 16;
     * }
     */
    public static int skcms_PixelFormat_RGB_161616LE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_BGR_161616LE = 17;
     * }
     */
    public static int skcms_PixelFormat_BGR_161616LE() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_RGBA_16161616LE = 18;
     * }
     */
    public static int skcms_PixelFormat_RGBA_16161616LE() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_BGRA_16161616LE = 19;
     * }
     */
    public static int skcms_PixelFormat_BGRA_16161616LE() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_RGB_161616BE = 20;
     * }
     */
    public static int skcms_PixelFormat_RGB_161616BE() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_BGR_161616BE = 21;
     * }
     */
    public static int skcms_PixelFormat_BGR_161616BE() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_RGBA_16161616BE = 22;
     * }
     */
    public static int skcms_PixelFormat_RGBA_16161616BE() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_BGRA_16161616BE = 23;
     * }
     */
    public static int skcms_PixelFormat_BGRA_16161616BE() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_RGB_hhh_Norm = 24;
     * }
     */
    public static int skcms_PixelFormat_RGB_hhh_Norm() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_BGR_hhh_Norm = 25;
     * }
     */
    public static int skcms_PixelFormat_BGR_hhh_Norm() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_RGBA_hhhh_Norm = 26;
     * }
     */
    public static int skcms_PixelFormat_RGBA_hhhh_Norm() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_BGRA_hhhh_Norm = 27;
     * }
     */
    public static int skcms_PixelFormat_BGRA_hhhh_Norm() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_RGB_hhh = 28;
     * }
     */
    public static int skcms_PixelFormat_RGB_hhh() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_BGR_hhh = 29;
     * }
     */
    public static int skcms_PixelFormat_BGR_hhh() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_RGBA_hhhh = 30;
     * }
     */
    public static int skcms_PixelFormat_RGBA_hhhh() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_BGRA_hhhh = 31;
     * }
     */
    public static int skcms_PixelFormat_BGRA_hhhh() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_RGB_fff = 32;
     * }
     */
    public static int skcms_PixelFormat_RGB_fff() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_BGR_fff = 33;
     * }
     */
    public static int skcms_PixelFormat_BGR_fff() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_RGBA_ffff = 34;
     * }
     */
    public static int skcms_PixelFormat_RGBA_ffff() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_BGRA_ffff = 35;
     * }
     */
    public static int skcms_PixelFormat_BGRA_ffff() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_RGB_101010x_XR = 36;
     * }
     */
    public static int skcms_PixelFormat_RGB_101010x_XR() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * enum skcms_PixelFormat.skcms_PixelFormat_BGR_101010x_XR = 37;
     * }
     */
    public static int skcms_PixelFormat_BGR_101010x_XR() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * enum skcms_AlphaFormat.skcms_AlphaFormat_Opaque = 0;
     * }
     */
    public static int skcms_AlphaFormat_Opaque() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum skcms_AlphaFormat.skcms_AlphaFormat_Unpremul = 1;
     * }
     */
    public static int skcms_AlphaFormat_Unpremul() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum skcms_AlphaFormat.skcms_AlphaFormat_PremulAsEncoded = 2;
     * }
     */
    public static int skcms_AlphaFormat_PremulAsEncoded() {
        return (int)2L;
    }
    public static MethodHandle skcms_Transform$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$166,"skcms_Transform");
    }
    /**
     * {@snippet :
     * _Bool skcms_Transform(void* src, skcms_PixelFormat srcFmt, skcms_AlphaFormat srcAlpha, const skcms_ICCProfile* srcProfile, void* dst, skcms_PixelFormat dstFmt, skcms_AlphaFormat dstAlpha, const skcms_ICCProfile* dstProfile, size_t npixels);
     * }
     */
    public static boolean skcms_Transform(MemorySegment src, int srcFmt, int srcAlpha, MemorySegment srcProfile, MemorySegment dst, int dstFmt, int dstAlpha, MemorySegment dstProfile, long npixels) {
        var mh$ = skcms_Transform$MH();
        try {
            return (boolean)mh$.invokeExact(src, srcFmt, srcAlpha, srcProfile, dst, dstFmt, dstAlpha, dstProfile, npixels);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_MakeUsableAsDestination$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$167,"skcms_MakeUsableAsDestination");
    }
    /**
     * {@snippet :
     * _Bool skcms_MakeUsableAsDestination(skcms_ICCProfile* profile);
     * }
     */
    public static boolean skcms_MakeUsableAsDestination(MemorySegment profile) {
        var mh$ = skcms_MakeUsableAsDestination$MH();
        try {
            return (boolean)mh$.invokeExact(profile);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_MakeUsableAsDestinationWithSingleCurve$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$168,"skcms_MakeUsableAsDestinationWithSingleCurve");
    }
    /**
     * {@snippet :
     * _Bool skcms_MakeUsableAsDestinationWithSingleCurve(skcms_ICCProfile* profile);
     * }
     */
    public static boolean skcms_MakeUsableAsDestinationWithSingleCurve(MemorySegment profile) {
        var mh$ = skcms_MakeUsableAsDestinationWithSingleCurve$MH();
        try {
            return (boolean)mh$.invokeExact(profile);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_AdaptToXYZD50$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$170,"skcms_AdaptToXYZD50");
    }
    /**
     * {@snippet :
     * _Bool skcms_AdaptToXYZD50(float wx, float wy, skcms_Matrix3x3* toXYZD50);
     * }
     */
    public static boolean skcms_AdaptToXYZD50(float wx, float wy, MemorySegment toXYZD50) {
        var mh$ = skcms_AdaptToXYZD50$MH();
        try {
            return (boolean)mh$.invokeExact(wx, wy, toXYZD50);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_PrimariesToXYZD50$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$172,"skcms_PrimariesToXYZD50");
    }
    /**
     * {@snippet :
     * _Bool skcms_PrimariesToXYZD50(float rx, float ry, float gx, float gy, float bx, float by, float wx, float wy, skcms_Matrix3x3* toXYZD50);
     * }
     */
    public static boolean skcms_PrimariesToXYZD50(float rx, float ry, float gx, float gy, float bx, float by, float wx, float wy, MemorySegment toXYZD50) {
        var mh$ = skcms_PrimariesToXYZD50$MH();
        try {
            return (boolean)mh$.invokeExact(rx, ry, gx, gy, bx, by, wx, wy, toXYZD50);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle skcms_DisableRuntimeCPUDetection$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$174,"skcms_DisableRuntimeCPUDetection");
    }
    /**
     * {@snippet :
     * void skcms_DisableRuntimeCPUDetection();
     * }
     */
    public static void skcms_DisableRuntimeCPUDetection() {
        var mh$ = skcms_DisableRuntimeCPUDetection$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * #define NULL 0
     * }
     */
    public static MemorySegment NULL() {
        return constants$0.const$175;
    }
    /**
     * {@snippet :
     * #define _POSIX_C_SOURCE 200809
     * }
     */
    public static long _POSIX_C_SOURCE() {
        return 200809L;
    }
    /**
     * {@snippet :
     * #define __TIMESIZE 64
     * }
     */
    public static int __TIMESIZE() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define __STDC_IEC_60559_BFP__ 201404
     * }
     */
    public static long __STDC_IEC_60559_BFP__() {
        return 201404L;
    }
    /**
     * {@snippet :
     * #define __STDC_IEC_60559_COMPLEX__ 201404
     * }
     */
    public static long __STDC_IEC_60559_COMPLEX__() {
        return 201404L;
    }
    /**
     * {@snippet :
     * #define __STDC_ISO_10646__ 201706
     * }
     */
    public static long __STDC_ISO_10646__() {
        return 201706L;
    }
    /**
     * {@snippet :
     * #define __WCHAR_MAX 2147483647
     * }
     */
    public static int __WCHAR_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define __WCHAR_MIN -2147483648
     * }
     */
    public static int __WCHAR_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define INT8_MIN -128
     * }
     */
    public static int INT8_MIN() {
        return (int)-128L;
    }
    /**
     * {@snippet :
     * #define INT16_MIN -32768
     * }
     */
    public static int INT16_MIN() {
        return (int)-32768L;
    }
    /**
     * {@snippet :
     * #define INT32_MIN -2147483648
     * }
     */
    public static int INT32_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define INT64_MIN -9223372036854775808
     * }
     */
    public static long INT64_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INT8_MAX 127
     * }
     */
    public static int INT8_MAX() {
        return (int)127L;
    }
    /**
     * {@snippet :
     * #define INT16_MAX 32767
     * }
     */
    public static int INT16_MAX() {
        return (int)32767L;
    }
    /**
     * {@snippet :
     * #define INT32_MAX 2147483647
     * }
     */
    public static int INT32_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define INT64_MAX 9223372036854775807
     * }
     */
    public static long INT64_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define UINT8_MAX 255
     * }
     */
    public static int UINT8_MAX() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * #define UINT16_MAX 65535
     * }
     */
    public static int UINT16_MAX() {
        return (int)65535L;
    }
    /**
     * {@snippet :
     * #define UINT32_MAX 4294967295
     * }
     */
    public static int UINT32_MAX() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define UINT64_MAX -1
     * }
     */
    public static long UINT64_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST8_MIN -128
     * }
     */
    public static int INT_LEAST8_MIN() {
        return (int)-128L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST16_MIN -32768
     * }
     */
    public static int INT_LEAST16_MIN() {
        return (int)-32768L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST32_MIN -2147483648
     * }
     */
    public static int INT_LEAST32_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST64_MIN -9223372036854775808
     * }
     */
    public static long INT_LEAST64_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST8_MAX 127
     * }
     */
    public static int INT_LEAST8_MAX() {
        return (int)127L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST16_MAX 32767
     * }
     */
    public static int INT_LEAST16_MAX() {
        return (int)32767L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST32_MAX 2147483647
     * }
     */
    public static int INT_LEAST32_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST64_MAX 9223372036854775807
     * }
     */
    public static long INT_LEAST64_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define UINT_LEAST8_MAX 255
     * }
     */
    public static int UINT_LEAST8_MAX() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * #define UINT_LEAST16_MAX 65535
     * }
     */
    public static int UINT_LEAST16_MAX() {
        return (int)65535L;
    }
    /**
     * {@snippet :
     * #define UINT_LEAST32_MAX 4294967295
     * }
     */
    public static int UINT_LEAST32_MAX() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define UINT_LEAST64_MAX -1
     * }
     */
    public static long UINT_LEAST64_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define INT_FAST8_MIN -128
     * }
     */
    public static int INT_FAST8_MIN() {
        return (int)-128L;
    }
    /**
     * {@snippet :
     * #define INT_FAST16_MIN -9223372036854775808
     * }
     */
    public static long INT_FAST16_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INT_FAST32_MIN -9223372036854775808
     * }
     */
    public static long INT_FAST32_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INT_FAST64_MIN -9223372036854775808
     * }
     */
    public static long INT_FAST64_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INT_FAST8_MAX 127
     * }
     */
    public static int INT_FAST8_MAX() {
        return (int)127L;
    }
    /**
     * {@snippet :
     * #define INT_FAST16_MAX 9223372036854775807
     * }
     */
    public static long INT_FAST16_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define INT_FAST32_MAX 9223372036854775807
     * }
     */
    public static long INT_FAST32_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define INT_FAST64_MAX 9223372036854775807
     * }
     */
    public static long INT_FAST64_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define UINT_FAST8_MAX 255
     * }
     */
    public static int UINT_FAST8_MAX() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * #define UINT_FAST16_MAX -1
     * }
     */
    public static long UINT_FAST16_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define UINT_FAST32_MAX -1
     * }
     */
    public static long UINT_FAST32_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define UINT_FAST64_MAX -1
     * }
     */
    public static long UINT_FAST64_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define INTPTR_MIN -9223372036854775808
     * }
     */
    public static long INTPTR_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INTPTR_MAX 9223372036854775807
     * }
     */
    public static long INTPTR_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define UINTPTR_MAX -1
     * }
     */
    public static long UINTPTR_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define INTMAX_MIN -9223372036854775808
     * }
     */
    public static long INTMAX_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INTMAX_MAX 9223372036854775807
     * }
     */
    public static long INTMAX_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define UINTMAX_MAX -1
     * }
     */
    public static long UINTMAX_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define PTRDIFF_MIN -9223372036854775808
     * }
     */
    public static long PTRDIFF_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define PTRDIFF_MAX 9223372036854775807
     * }
     */
    public static long PTRDIFF_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define SIG_ATOMIC_MIN -2147483648
     * }
     */
    public static int SIG_ATOMIC_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define SIG_ATOMIC_MAX 2147483647
     * }
     */
    public static int SIG_ATOMIC_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define SIZE_MAX -1
     * }
     */
    public static long SIZE_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define WCHAR_MIN -2147483648
     * }
     */
    public static int WCHAR_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define WCHAR_MAX 2147483647
     * }
     */
    public static int WCHAR_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define WINT_MIN 0
     * }
     */
    public static int WINT_MIN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINT_MAX 4294967295
     * }
     */
    public static int WINT_MAX() {
        return (int)4294967295L;
    }
}


