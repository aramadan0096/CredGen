// Generated by jextract

package com.loadingbyte.credgen.natives.harfbuzz;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class hb_h  {

    public static final OfByte C_CHAR = JAVA_BYTE;
    public static final OfShort C_SHORT = JAVA_SHORT;
    public static final OfInt C_INT = JAVA_INT;
    public static final OfLong C_LONG = JAVA_LONG;
    public static final OfLong C_LONG_LONG = JAVA_LONG;
    public static final OfFloat C_FLOAT = JAVA_FLOAT;
    public static final OfDouble C_DOUBLE = JAVA_DOUBLE;
    public static final AddressLayout C_POINTER = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * #define HB_FEATURE_GLOBAL_START 0
     * }
     */
    public static int HB_FEATURE_GLOBAL_START() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .HB_DIRECTION_LTR = 4;
     * }
     */
    public static int HB_DIRECTION_LTR() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .HB_DIRECTION_RTL = 5;
     * }
     */
    public static int HB_DIRECTION_RTL() {
        return (int)5L;
    }
    public static MethodHandle hb_language_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$1,"hb_language_from_string");
    }
    /**
     * {@snippet :
     * hb_language_t hb_language_from_string(char* str, int len);
     * }
     */
    public static MemorySegment hb_language_from_string(MemorySegment str, int len) {
        var mh$ = hb_language_from_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_COMMON = 1517910393;
     * }
     */
    public static int HB_SCRIPT_COMMON() {
        return (int)1517910393L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_INHERITED = 1516858984;
     * }
     */
    public static int HB_SCRIPT_INHERITED() {
        return (int)1516858984L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_ARABIC = 1098015074;
     * }
     */
    public static int HB_SCRIPT_ARABIC() {
        return (int)1098015074L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_ARMENIAN = 1098018158;
     * }
     */
    public static int HB_SCRIPT_ARMENIAN() {
        return (int)1098018158L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_BENGALI = 1113943655;
     * }
     */
    public static int HB_SCRIPT_BENGALI() {
        return (int)1113943655L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_CYRILLIC = 1132032620;
     * }
     */
    public static int HB_SCRIPT_CYRILLIC() {
        return (int)1132032620L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_DEVANAGARI = 1147500129;
     * }
     */
    public static int HB_SCRIPT_DEVANAGARI() {
        return (int)1147500129L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_GEORGIAN = 1197830002;
     * }
     */
    public static int HB_SCRIPT_GEORGIAN() {
        return (int)1197830002L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_GREEK = 1198679403;
     * }
     */
    public static int HB_SCRIPT_GREEK() {
        return (int)1198679403L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_GUJARATI = 1198877298;
     * }
     */
    public static int HB_SCRIPT_GUJARATI() {
        return (int)1198877298L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_GURMUKHI = 1198879349;
     * }
     */
    public static int HB_SCRIPT_GURMUKHI() {
        return (int)1198879349L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_HANGUL = 1214344807;
     * }
     */
    public static int HB_SCRIPT_HANGUL() {
        return (int)1214344807L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_HAN = 1214344809;
     * }
     */
    public static int HB_SCRIPT_HAN() {
        return (int)1214344809L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_HEBREW = 1214603890;
     * }
     */
    public static int HB_SCRIPT_HEBREW() {
        return (int)1214603890L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_HIRAGANA = 1214870113;
     * }
     */
    public static int HB_SCRIPT_HIRAGANA() {
        return (int)1214870113L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_KANNADA = 1265525857;
     * }
     */
    public static int HB_SCRIPT_KANNADA() {
        return (int)1265525857L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_KATAKANA = 1264676449;
     * }
     */
    public static int HB_SCRIPT_KATAKANA() {
        return (int)1264676449L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_LAO = 1281453935;
     * }
     */
    public static int HB_SCRIPT_LAO() {
        return (int)1281453935L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_LATIN = 1281455214;
     * }
     */
    public static int HB_SCRIPT_LATIN() {
        return (int)1281455214L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_MALAYALAM = 1298954605;
     * }
     */
    public static int HB_SCRIPT_MALAYALAM() {
        return (int)1298954605L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_ORIYA = 1332902241;
     * }
     */
    public static int HB_SCRIPT_ORIYA() {
        return (int)1332902241L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_TAMIL = 1415671148;
     * }
     */
    public static int HB_SCRIPT_TAMIL() {
        return (int)1415671148L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_TELUGU = 1415933045;
     * }
     */
    public static int HB_SCRIPT_TELUGU() {
        return (int)1415933045L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_THAI = 1416126825;
     * }
     */
    public static int HB_SCRIPT_THAI() {
        return (int)1416126825L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_TIBETAN = 1416192628;
     * }
     */
    public static int HB_SCRIPT_TIBETAN() {
        return (int)1416192628L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_BOPOMOFO = 1114599535;
     * }
     */
    public static int HB_SCRIPT_BOPOMOFO() {
        return (int)1114599535L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_CANADIAN_SYLLABICS = 1130458739;
     * }
     */
    public static int HB_SCRIPT_CANADIAN_SYLLABICS() {
        return (int)1130458739L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_CHEROKEE = 1130915186;
     * }
     */
    public static int HB_SCRIPT_CHEROKEE() {
        return (int)1130915186L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_ETHIOPIC = 1165256809;
     * }
     */
    public static int HB_SCRIPT_ETHIOPIC() {
        return (int)1165256809L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_KHMER = 1265134962;
     * }
     */
    public static int HB_SCRIPT_KHMER() {
        return (int)1265134962L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_MONGOLIAN = 1299148391;
     * }
     */
    public static int HB_SCRIPT_MONGOLIAN() {
        return (int)1299148391L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_MYANMAR = 1299803506;
     * }
     */
    public static int HB_SCRIPT_MYANMAR() {
        return (int)1299803506L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_OGHAM = 1332175213;
     * }
     */
    public static int HB_SCRIPT_OGHAM() {
        return (int)1332175213L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_RUNIC = 1383427698;
     * }
     */
    public static int HB_SCRIPT_RUNIC() {
        return (int)1383427698L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_SINHALA = 1399418472;
     * }
     */
    public static int HB_SCRIPT_SINHALA() {
        return (int)1399418472L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_SYRIAC = 1400468067;
     * }
     */
    public static int HB_SCRIPT_SYRIAC() {
        return (int)1400468067L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_THAANA = 1416126817;
     * }
     */
    public static int HB_SCRIPT_THAANA() {
        return (int)1416126817L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_YI = 1500080489;
     * }
     */
    public static int HB_SCRIPT_YI() {
        return (int)1500080489L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_DESERET = 1148416628;
     * }
     */
    public static int HB_SCRIPT_DESERET() {
        return (int)1148416628L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_GOTHIC = 1198486632;
     * }
     */
    public static int HB_SCRIPT_GOTHIC() {
        return (int)1198486632L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_OLD_ITALIC = 1232363884;
     * }
     */
    public static int HB_SCRIPT_OLD_ITALIC() {
        return (int)1232363884L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_BUHID = 1114990692;
     * }
     */
    public static int HB_SCRIPT_BUHID() {
        return (int)1114990692L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_HANUNOO = 1214344815;
     * }
     */
    public static int HB_SCRIPT_HANUNOO() {
        return (int)1214344815L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_TAGALOG = 1416064103;
     * }
     */
    public static int HB_SCRIPT_TAGALOG() {
        return (int)1416064103L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_TAGBANWA = 1415669602;
     * }
     */
    public static int HB_SCRIPT_TAGBANWA() {
        return (int)1415669602L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_COPTIC = 1131376756;
     * }
     */
    public static int HB_SCRIPT_COPTIC() {
        return (int)1131376756L;
    }
    /**
     * {@snippet :
     * enum .HB_SCRIPT_INVALID = 0;
     * }
     */
    public static int HB_SCRIPT_INVALID() {
        return (int)0L;
    }
    public static MethodHandle hb_feature_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$11,"hb_feature_from_string");
    }
    /**
     * {@snippet :
     * hb_bool_t hb_feature_from_string(char* str, int len, hb_feature_t* feature);
     * }
     */
    public static int hb_feature_from_string(MemorySegment str, int len, MemorySegment feature) {
        var mh$ = hb_feature_from_string$MH();
        try {
            return (int)mh$.invokeExact(str, len, feature);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .HB_MEMORY_MODE_WRITABLE = 2;
     * }
     */
    public static int HB_MEMORY_MODE_WRITABLE() {
        return (int)2L;
    }
    public static MethodHandle hb_blob_create$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$13,"hb_blob_create");
    }
    /**
     * {@snippet :
     * hb_blob_t* hb_blob_create(char* data, unsigned int length, hb_memory_mode_t mode, void* user_data, hb_destroy_func_t destroy);
     * }
     */
    public static MemorySegment hb_blob_create(MemorySegment data, int length, int mode, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_blob_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(data, length, mode, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_create_for_tables$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$18,"hb_face_create_for_tables");
    }
    /**
     * {@snippet :
     * hb_face_t* hb_face_create_for_tables(hb_reference_table_func_t reference_table_func, void* user_data, hb_destroy_func_t destroy);
     * }
     */
    public static MemorySegment hb_face_create_for_tables(MemorySegment reference_table_func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_face_create_for_tables$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(reference_table_func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$19,"hb_face_destroy");
    }
    /**
     * {@snippet :
     * void hb_face_destroy(hb_face_t* face);
     * }
     */
    public static void hb_face_destroy(MemorySegment face) {
        var mh$ = hb_face_destroy$MH();
        try {
            mh$.invokeExact(face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_create$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$21,"hb_font_create");
    }
    /**
     * {@snippet :
     * hb_font_t* hb_font_create(hb_face_t* face);
     * }
     */
    public static MemorySegment hb_font_create(MemorySegment face) {
        var mh$ = hb_font_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$22,"hb_font_destroy");
    }
    /**
     * {@snippet :
     * void hb_font_destroy(hb_font_t* font);
     * }
     */
    public static void hb_font_destroy(MemorySegment font) {
        var mh$ = hb_font_destroy$MH();
        try {
            mh$.invokeExact(font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_set_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$24,"hb_font_set_scale");
    }
    /**
     * {@snippet :
     * void hb_font_set_scale(hb_font_t* font, int x_scale, int y_scale);
     * }
     */
    public static void hb_font_set_scale(MemorySegment font, int x_scale, int y_scale) {
        var mh$ = hb_font_set_scale$MH();
        try {
            mh$.invokeExact(font, x_scale, y_scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_create$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$35,"hb_buffer_create");
    }
    /**
     * {@snippet :
     * hb_buffer_t* hb_buffer_create();
     * }
     */
    public static MemorySegment hb_buffer_create() {
        var mh$ = hb_buffer_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$36,"hb_buffer_destroy");
    }
    /**
     * {@snippet :
     * void hb_buffer_destroy(hb_buffer_t* buffer);
     * }
     */
    public static void hb_buffer_destroy(MemorySegment buffer) {
        var mh$ = hb_buffer_destroy$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_set_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$38,"hb_buffer_set_direction");
    }
    /**
     * {@snippet :
     * void hb_buffer_set_direction(hb_buffer_t* buffer, hb_direction_t direction);
     * }
     */
    public static void hb_buffer_set_direction(MemorySegment buffer, int direction) {
        var mh$ = hb_buffer_set_direction$MH();
        try {
            mh$.invokeExact(buffer, direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_set_script$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$39,"hb_buffer_set_script");
    }
    /**
     * {@snippet :
     * void hb_buffer_set_script(hb_buffer_t* buffer, hb_script_t script);
     * }
     */
    public static void hb_buffer_set_script(MemorySegment buffer, int script) {
        var mh$ = hb_buffer_set_script$MH();
        try {
            mh$.invokeExact(buffer, script);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_set_language$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$41,"hb_buffer_set_language");
    }
    /**
     * {@snippet :
     * void hb_buffer_set_language(hb_buffer_t* buffer, hb_language_t language);
     * }
     */
    public static void hb_buffer_set_language(MemorySegment buffer, MemorySegment language) {
        var mh$ = hb_buffer_set_language$MH();
        try {
            mh$.invokeExact(buffer, language);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .HB_BUFFER_CLUSTER_LEVEL_MONOTONE_GRAPHEMES = 0;
     * }
     */
    public static int HB_BUFFER_CLUSTER_LEVEL_MONOTONE_GRAPHEMES() {
        return (int)0L;
    }
    public static MethodHandle hb_buffer_set_cluster_level$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$42,"hb_buffer_set_cluster_level");
    }
    /**
     * {@snippet :
     * void hb_buffer_set_cluster_level(hb_buffer_t* buffer, hb_buffer_cluster_level_t cluster_level);
     * }
     */
    public static void hb_buffer_set_cluster_level(MemorySegment buffer, int cluster_level) {
        var mh$ = hb_buffer_set_cluster_level$MH();
        try {
            mh$.invokeExact(buffer, cluster_level);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_add_utf16$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$44,"hb_buffer_add_utf16");
    }
    /**
     * {@snippet :
     * void hb_buffer_add_utf16(hb_buffer_t* buffer, const uint16_t* text, int text_length, unsigned int item_offset, int item_length);
     * }
     */
    public static void hb_buffer_add_utf16(MemorySegment buffer, MemorySegment text, int text_length, int item_offset, int item_length) {
        var mh$ = hb_buffer_add_utf16$MH();
        try {
            mh$.invokeExact(buffer, text, text_length, item_offset, item_length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_get_length$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$46,"hb_buffer_get_length");
    }
    /**
     * {@snippet :
     * unsigned int hb_buffer_get_length(const hb_buffer_t* buffer);
     * }
     */
    public static int hb_buffer_get_length(MemorySegment buffer) {
        var mh$ = hb_buffer_get_length$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_get_glyph_infos$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$48,"hb_buffer_get_glyph_infos");
    }
    /**
     * {@snippet :
     * hb_glyph_info_t* hb_buffer_get_glyph_infos(hb_buffer_t* buffer, unsigned int* length);
     * }
     */
    public static MemorySegment hb_buffer_get_glyph_infos(MemorySegment buffer, MemorySegment length) {
        var mh$ = hb_buffer_get_glyph_infos$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_get_glyph_positions$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$49,"hb_buffer_get_glyph_positions");
    }
    /**
     * {@snippet :
     * hb_glyph_position_t* hb_buffer_get_glyph_positions(hb_buffer_t* buffer, unsigned int* length);
     * }
     */
    public static MemorySegment hb_buffer_get_glyph_positions(MemorySegment buffer, MemorySegment length) {
        var mh$ = hb_buffer_get_glyph_positions$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_shape$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$51,"hb_shape");
    }
    /**
     * {@snippet :
     * void hb_shape(hb_font_t* font, hb_buffer_t* buffer, const hb_feature_t* features, unsigned int num_features);
     * }
     */
    public static void hb_shape(MemorySegment font, MemorySegment buffer, MemorySegment features, int num_features) {
        var mh$ = hb_shape$MH();
        try {
            mh$.invokeExact(font, buffer, features, num_features);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * #define HB_FEATURE_GLOBAL_END 4294967295
     * }
     */
    public static int HB_FEATURE_GLOBAL_END() {
        return (int)4294967295L;
    }
}


