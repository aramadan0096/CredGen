// Generated by jextract

package com.loadingbyte.credgen.natives.harfbuzz;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$0 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$0() {}
    static final FunctionDescriptor const$0 = FunctionDescriptor.of(RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        JAVA_INT
    );
    static final MethodHandle const$1 = RuntimeHelper.downcallHandle(
        "hb_language_from_string",
        constants$0.const$0
    );
    static final FunctionDescriptor const$2 = FunctionDescriptor.ofVoid(
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$3 = RuntimeHelper.upcallHandle(hb_destroy_func_t.class, "apply", constants$0.const$2);
    static final MethodHandle const$4 = RuntimeHelper.downcallHandle(
        constants$0.const$2
    );
    static final StructLayout const$5 = MemoryLayout.structLayout(
        JAVA_INT.withName("tag"),
        JAVA_INT.withName("value"),
        JAVA_INT.withName("start"),
        JAVA_INT.withName("end")
    ).withName("hb_feature_t");
    static final VarHandle const$6 = constants$0.const$5.varHandle(MemoryLayout.PathElement.groupElement("tag"));
    static final VarHandle const$7 = constants$0.const$5.varHandle(MemoryLayout.PathElement.groupElement("value"));
    static final VarHandle const$8 = constants$0.const$5.varHandle(MemoryLayout.PathElement.groupElement("start"));
    static final VarHandle const$9 = constants$0.const$5.varHandle(MemoryLayout.PathElement.groupElement("end"));
    static final FunctionDescriptor const$10 = FunctionDescriptor.of(JAVA_INT,
        RuntimeHelper.POINTER,
        JAVA_INT,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$11 = RuntimeHelper.downcallHandle(
        "hb_feature_from_string",
        constants$0.const$10
    );
    static final FunctionDescriptor const$12 = FunctionDescriptor.of(RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        JAVA_INT,
        JAVA_INT,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$13 = RuntimeHelper.downcallHandle(
        "hb_blob_create",
        constants$0.const$12
    );
    static final FunctionDescriptor const$14 = FunctionDescriptor.of(RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        JAVA_INT,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$15 = RuntimeHelper.upcallHandle(hb_reference_table_func_t.class, "apply", constants$0.const$14);
    static final MethodHandle const$16 = RuntimeHelper.downcallHandle(
        constants$0.const$14
    );
    static final FunctionDescriptor const$17 = FunctionDescriptor.of(RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$18 = RuntimeHelper.downcallHandle(
        "hb_face_create_for_tables",
        constants$0.const$17
    );
    static final MethodHandle const$19 = RuntimeHelper.downcallHandle(
        "hb_face_destroy",
        constants$0.const$2
    );
    static final FunctionDescriptor const$20 = FunctionDescriptor.of(RuntimeHelper.POINTER,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$21 = RuntimeHelper.downcallHandle(
        "hb_font_create",
        constants$0.const$20
    );
    static final MethodHandle const$22 = RuntimeHelper.downcallHandle(
        "hb_font_destroy",
        constants$0.const$2
    );
    static final FunctionDescriptor const$23 = FunctionDescriptor.ofVoid(
        RuntimeHelper.POINTER,
        JAVA_INT,
        JAVA_INT
    );
    static final MethodHandle const$24 = RuntimeHelper.downcallHandle(
        "hb_font_set_scale",
        constants$0.const$23
    );
    static final StructLayout const$25 = MemoryLayout.structLayout(
        JAVA_INT.withName("codepoint"),
        JAVA_INT.withName("mask"),
        JAVA_INT.withName("cluster"),
        MemoryLayout.unionLayout(
            JAVA_INT.withName("u32"),
            JAVA_INT.withName("i32"),
            MemoryLayout.sequenceLayout(2, JAVA_SHORT).withName("u16"),
            MemoryLayout.sequenceLayout(2, JAVA_SHORT).withName("i16"),
            MemoryLayout.sequenceLayout(4, JAVA_BYTE).withName("u8"),
            MemoryLayout.sequenceLayout(4, JAVA_BYTE).withName("i8")
        ).withName("var1"),
        MemoryLayout.unionLayout(
            JAVA_INT.withName("u32"),
            JAVA_INT.withName("i32"),
            MemoryLayout.sequenceLayout(2, JAVA_SHORT).withName("u16"),
            MemoryLayout.sequenceLayout(2, JAVA_SHORT).withName("i16"),
            MemoryLayout.sequenceLayout(4, JAVA_BYTE).withName("u8"),
            MemoryLayout.sequenceLayout(4, JAVA_BYTE).withName("i8")
        ).withName("var2")
    ).withName("hb_glyph_info_t");
    static final VarHandle const$26 = constants$0.const$25.varHandle(MemoryLayout.PathElement.groupElement("codepoint"));
    static final VarHandle const$27 = constants$0.const$25.varHandle(MemoryLayout.PathElement.groupElement("mask"));
    static final VarHandle const$28 = constants$0.const$25.varHandle(MemoryLayout.PathElement.groupElement("cluster"));
    static final StructLayout const$29 = MemoryLayout.structLayout(
        JAVA_INT.withName("x_advance"),
        JAVA_INT.withName("y_advance"),
        JAVA_INT.withName("x_offset"),
        JAVA_INT.withName("y_offset"),
        MemoryLayout.unionLayout(
            JAVA_INT.withName("u32"),
            JAVA_INT.withName("i32"),
            MemoryLayout.sequenceLayout(2, JAVA_SHORT).withName("u16"),
            MemoryLayout.sequenceLayout(2, JAVA_SHORT).withName("i16"),
            MemoryLayout.sequenceLayout(4, JAVA_BYTE).withName("u8"),
            MemoryLayout.sequenceLayout(4, JAVA_BYTE).withName("i8")
        ).withName("var")
    ).withName("hb_glyph_position_t");
    static final VarHandle const$30 = constants$0.const$29.varHandle(MemoryLayout.PathElement.groupElement("x_advance"));
    static final VarHandle const$31 = constants$0.const$29.varHandle(MemoryLayout.PathElement.groupElement("y_advance"));
    static final VarHandle const$32 = constants$0.const$29.varHandle(MemoryLayout.PathElement.groupElement("x_offset"));
    static final VarHandle const$33 = constants$0.const$29.varHandle(MemoryLayout.PathElement.groupElement("y_offset"));
    static final FunctionDescriptor const$34 = FunctionDescriptor.of(RuntimeHelper.POINTER);
    static final MethodHandle const$35 = RuntimeHelper.downcallHandle(
        "hb_buffer_create",
        constants$0.const$34
    );
    static final MethodHandle const$36 = RuntimeHelper.downcallHandle(
        "hb_buffer_destroy",
        constants$0.const$2
    );
    static final FunctionDescriptor const$37 = FunctionDescriptor.ofVoid(
        RuntimeHelper.POINTER,
        JAVA_INT
    );
    static final MethodHandle const$38 = RuntimeHelper.downcallHandle(
        "hb_buffer_set_direction",
        constants$0.const$37
    );
    static final MethodHandle const$39 = RuntimeHelper.downcallHandle(
        "hb_buffer_set_script",
        constants$0.const$37
    );
    static final FunctionDescriptor const$40 = FunctionDescriptor.ofVoid(
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$41 = RuntimeHelper.downcallHandle(
        "hb_buffer_set_language",
        constants$0.const$40
    );
    static final MethodHandle const$42 = RuntimeHelper.downcallHandle(
        "hb_buffer_set_cluster_level",
        constants$0.const$37
    );
    static final FunctionDescriptor const$43 = FunctionDescriptor.ofVoid(
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        JAVA_INT,
        JAVA_INT,
        JAVA_INT
    );
    static final MethodHandle const$44 = RuntimeHelper.downcallHandle(
        "hb_buffer_add_utf16",
        constants$0.const$43
    );
    static final FunctionDescriptor const$45 = FunctionDescriptor.of(JAVA_INT,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$46 = RuntimeHelper.downcallHandle(
        "hb_buffer_get_length",
        constants$0.const$45
    );
    static final FunctionDescriptor const$47 = FunctionDescriptor.of(RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$48 = RuntimeHelper.downcallHandle(
        "hb_buffer_get_glyph_infos",
        constants$0.const$47
    );
    static final MethodHandle const$49 = RuntimeHelper.downcallHandle(
        "hb_buffer_get_glyph_positions",
        constants$0.const$47
    );
    static final FunctionDescriptor const$50 = FunctionDescriptor.ofVoid(
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        JAVA_INT
    );
    static final MethodHandle const$51 = RuntimeHelper.downcallHandle(
        "hb_shape",
        constants$0.const$50
    );
}


